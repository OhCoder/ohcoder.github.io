<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>OhCoder</title><link>https://ohcoder.com/</link><description>Recent content on OhCoder</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 06 Mar 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://ohcoder.com/index.xml" rel="self" type="application/rss+xml"/><item><title>About</title><link>https://ohcoder.com/page/2022/03/06/about/</link><pubDate>Sun, 06 Mar 2022 00:00:00 +0000</pubDate><guid>https://ohcoder.com/page/2022/03/06/about/</guid><description>&lt;h2 id="关于我">关于我&lt;/h2>
&lt;p>&lt;strong>宇称&lt;/strong>，与常山赵子龙是同乡，一个喜欢安静，但内心却不安分的程序员。&lt;/p>
&lt;p>从事软件开发行业十多年。早年基于 C# 做过传统 PC 软件开发。后因年轻气盛，基于 C++ 尝试过计算机图形图像仿真软件方面的开发……&lt;/p>
&lt;p>紧接着，遇到移动互联网的崛起。为了理想和情怀，辞去工作，尝试过成为独立开发者，开发一款心仪的 app，从此改变世界，过上周游世界，衣食无忧的日子……&lt;/p>
&lt;p>然而，理想很丰满，现实很骨感。兜里的钱花完，不得不向现实低头，签卖身契，滚回公司上班。但作为一名程序员，为了心中仅存的那点儿好奇心，选择了 Web 开发。&lt;/p>
&lt;p>之后遇到了爱情，谈恋爱，结婚。&lt;/p>
&lt;p>近两年，考虑到父母的年纪，选择离开北京，随媳妇来到西安生活，努力长期定居于此。&lt;/p>
&lt;h3 id="喜欢的动漫">喜欢的动漫&lt;/h3>
&lt;p>&lt;a class="link" href="https://movie.douban.com/subject/1756889/" target="_blank" rel="noopener"
>《棒球英豪》&lt;/a> （注，最近在被媳妇安利&lt;a class="link" href="https://movie.douban.com/subject/1453238/" target="_blank" rel="noopener"
>《海贼王》&lt;/a>）&lt;/p>
&lt;h3 id="喜欢的电视剧">喜欢的电视剧&lt;/h3>
&lt;p>&lt;a class="link" href="https://movie.douban.com/subject/2347485/" target="_blank" rel="noopener"
>《天道》&lt;/a>（改编自小说&lt;a class="link" href="https://book.douban.com/subject/1322455/" target="_blank" rel="noopener"
>《遥远的救世主》&lt;/a>）、&lt;a class="link" href="https://movie.douban.com/subject/1393859/" target="_blank" rel="noopener"
>《老友记》&lt;/a>&lt;/p>
&lt;h3 id="喜欢的书">喜欢的书&lt;/h3>
&lt;p>很多……&lt;/p>
&lt;h2 id="关于本站">关于本站&lt;/h2>
&lt;p>作为一名写了十几年代码的程序员，大概率这已经不是我第一个个人网站。说起来，从公元「二零一二年」开始自己建站写 blog ，期间一直没有间断，一直持续至今。但由于种种原因（具体忘记了），于公元「二零一八年」下线，之后一直将文字写在手机上。这应该是我认真建立的第二个个人站点。&lt;/p>
&lt;p>话说回来，作为一名程序员，想搭建一个网站。当然是自己手写一个更有成就感。然而时隔几年（公元二零一八年～公元二零二二年）……&lt;/p>
&lt;h3 id="技术栈">技术栈&lt;/h3>
&lt;h4 id="框架">框架&lt;/h4>
&lt;ul>
&lt;li>&lt;a class="link" href="https://gohugo.io" target="_blank" rel="noopener"
>Hugo&lt;/a>&lt;/li>
&lt;/ul>
&lt;h4 id="主题">主题&lt;/h4>
&lt;ul>
&lt;li>改编自 &lt;a class="link" href="https://docs.stack.jimmycai.com" target="_blank" rel="noopener"
>Hugo theme Stack&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="感谢">感谢&lt;/h3>
&lt;p>在此，感谢 &lt;a class="link" href="https://gohugo.io" target="_blank" rel="noopener"
>Hugo&lt;/a> 开源项目，感谢 &lt;a class="link" href="https://docs.stack.jimmycai.com" target="_blank" rel="noopener"
>Hugo theme Stack&lt;/a> 开源主题，感谢每一个为开源社区做过贡献的人。&lt;/p>
&lt;h2 id="老黄历">老黄历&lt;/h2>
&lt;p>点击&lt;a class="link" href="https://web.archive.org/web/20181101172413/http://ohcoder.com/" target="_blank" rel="noopener"
>这里&lt;/a>，可以翻看我的第一个网站，那里有我的老黄历。&lt;/p>
&lt;h2 id="靓照">靓照&lt;/h2>
&lt;p>向有缘人说 Hi！&lt;/p>
&lt;p>&lt;img src="https://ohcoder.com/page/2022/03/06/about/avatar.jpg"
width="250"
height="334"
srcset="https://ohcoder.com/page/2022/03/06/about/avatar_hu2be6918201697c0821cf20d1a45fe404_107545_480x0_resize_q75_box.jpg 480w, https://ohcoder.com/page/2022/03/06/about/avatar_hu2be6918201697c0821cf20d1a45fe404_107545_1024x0_resize_q75_box.jpg 1024w"
loading="lazy"
alt="Hi"
class="gallery-image"
data-flex-grow="74"
data-flex-basis="179px"
>&lt;/p>
&lt;h2 id="联系方式">联系方式&lt;/h2>
&lt;p>本站不设留言功能，觉得我长的帅，请通过 E-Mail 进行搭讪，恭候有缘人！&lt;/p>
&lt;p>&lt;img src="https://ohcoder.com/page/2022/03/06/about/mail.png"
width="167"
height="21"
srcset="https://ohcoder.com/page/2022/03/06/about/mail_hu32a2dfb6c609f93a982d1fec68ebef3f_2913_480x0_resize_box_3.png 480w, https://ohcoder.com/page/2022/03/06/about/mail_hu32a2dfb6c609f93a982d1fec68ebef3f_2913_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="795"
data-flex-basis="1908px"
>&lt;/p></description></item><item><title>Chinese Test</title><link>https://ohcoder.com/post/2020/09/09/test-chinese/</link><pubDate>Wed, 09 Sep 2020 00:00:00 +0000</pubDate><guid>https://ohcoder.com/post/2020/09/09/test-chinese/</guid><description>&lt;img src="https://ohcoder.com/post/2020/09/09/test-chinese/helena-hertz-wWZzXlDpMog-unsplash.jpg" alt="Featured image of post Chinese Test" />&lt;h2 id="正文测试">正文测试&lt;/h2>
&lt;p>而这些并不是完全重要，更加重要的问题是， 带着这些问题，我们来审视一下学生会退会。 既然如何， 对我个人而言，学生会退会不仅仅是一个重大的事件，还可能会改变我的人生。 我们不得不面对一个非常尴尬的事实，那就是， 可是，即使是这样，学生会退会的出现仍然代表了一定的意义。 学生会退会，发生了会如何，不发生又会如何。 经过上述讨论， 生活中，若学生会退会出现了，我们就不得不考虑它出现了的事实。 学生会退会，到底应该如何实现。 这样看来， 在这种困难的抉择下，本人思来想去，寝食难安。 对我个人而言，学生会退会不仅仅是一个重大的事件，还可能会改变我的人生。 就我个人来说，学生会退会对我的意义，不能不说非常重大。 莎士比亚曾经提到过，人的一生是短的，但如果卑劣地过这一生，就太长了。这似乎解答了我的疑惑。 莫扎特说过一句富有哲理的话，谁和我一样用功，谁就会和我一样成功。这启发了我， 对我个人而言，学生会退会不仅仅是一个重大的事件，还可能会改变我的人生。 学生会退会，到底应该如何实现。 一般来说， 从这个角度来看， 这种事实对本人来说意义重大，相信对这个世界也是有一定意义的。 在这种困难的抉择下，本人思来想去，寝食难安。 了解清楚学生会退会到底是一种怎么样的存在，是解决一切问题的关键。 一般来说， 生活中，若学生会退会出现了，我们就不得不考虑它出现了的事实。 问题的关键究竟为何？ 而这些并不是完全重要，更加重要的问题是。&lt;/p>
&lt;p>奥斯特洛夫斯基曾经说过，共同的事业，共同的斗争，可以使人们产生忍受一切的力量。　带着这句话，我们还要更加慎重的审视这个问题： 一般来讲，我们都必须务必慎重的考虑考虑。 既然如此， 这种事实对本人来说意义重大，相信对这个世界也是有一定意义的。 带着这些问题，我们来审视一下学生会退会。 我认为， 我认为， 在这种困难的抉择下，本人思来想去，寝食难安。 问题的关键究竟为何？ 每个人都不得不面对这些问题。 在面对这种问题时， 要想清楚，学生会退会，到底是一种怎么样的存在。 我认为， 既然如此， 每个人都不得不面对这些问题。 在面对这种问题时， 那么， 我认为， 学生会退会因何而发生。&lt;/p>
&lt;h2 id="引用">引用&lt;/h2>
&lt;blockquote>
&lt;p>思念是最暖的忧伤像一双翅膀&lt;br>
让我停不了飞不远在过往游荡&lt;br>
不告而别的你 就算为了我着想&lt;br>
这么沉痛的呵护 我怎么能翱翔&lt;/p>
&lt;p>&lt;em>&lt;a class="link" href="https://www.youtube.com/watch?v=3aypp_YlBzI" target="_blank" rel="noopener"
>最暖的憂傷 - 田馥甄&lt;/a>&lt;/em>&lt;/p>
&lt;/blockquote>
&lt;h2 id="图片">图片&lt;/h2>
&lt;p>&lt;img src="https://ohcoder.com/post/2020/09/09/test-chinese/florian-klauer-nptLmg6jqDo-unsplash.jpg"
width="667"
height="1000"
srcset="https://ohcoder.com/post/2020/09/09/test-chinese/florian-klauer-nptLmg6jqDo-unsplash_hu595aaf3b3dbbb41af5aed8d3958cc9f9_13854_480x0_resize_q75_box.jpg 480w, https://ohcoder.com/post/2020/09/09/test-chinese/florian-klauer-nptLmg6jqDo-unsplash_hu595aaf3b3dbbb41af5aed8d3958cc9f9_13854_1024x0_resize_q75_box.jpg 1024w"
loading="lazy"
alt="Photo by Florian Klauer on Unsplash"
class="gallery-image"
data-flex-grow="66"
data-flex-basis="160px"
> &lt;img src="https://ohcoder.com/post/2020/09/09/test-chinese/luca-bravo-alS7ewQ41M8-unsplash.jpg"
width="1000"
height="667"
srcset="https://ohcoder.com/post/2020/09/09/test-chinese/luca-bravo-alS7ewQ41M8-unsplash_hu0a3f1163de68d0b9471979ebf0ecf11e_32400_480x0_resize_q75_box.jpg 480w, https://ohcoder.com/post/2020/09/09/test-chinese/luca-bravo-alS7ewQ41M8-unsplash_hu0a3f1163de68d0b9471979ebf0ecf11e_32400_1024x0_resize_q75_box.jpg 1024w"
loading="lazy"
alt="Photo by Luca Bravo on Unsplash"
class="gallery-image"
data-flex-grow="149"
data-flex-basis="359px"
>&lt;/p>
&lt;p>&lt;img src="https://ohcoder.com/post/2020/09/09/test-chinese/helena-hertz-wWZzXlDpMog-unsplash.jpg"
width="1000"
height="750"
srcset="https://ohcoder.com/post/2020/09/09/test-chinese/helena-hertz-wWZzXlDpMog-unsplash_hu45a5e3ad5e058da6a00650ed8fd40bea_15530_480x0_resize_q75_box.jpg 480w, https://ohcoder.com/post/2020/09/09/test-chinese/helena-hertz-wWZzXlDpMog-unsplash_hu45a5e3ad5e058da6a00650ed8fd40bea_15530_1024x0_resize_q75_box.jpg 1024w"
loading="lazy"
alt="Photo by Helena Hertz on Unsplash"
class="gallery-image"
data-flex-grow="133"
data-flex-basis="320px"
> &lt;img src="https://ohcoder.com/post/2020/09/09/test-chinese/hudai-gayiran-3Od_VKcDEAA-unsplash.jpg"
width="667"
height="1000"
srcset="https://ohcoder.com/post/2020/09/09/test-chinese/hudai-gayiran-3Od_VKcDEAA-unsplash_hub241c2a9c7a2caf7e16a2a5bbc7141ff_18711_480x0_resize_q75_box.jpg 480w, https://ohcoder.com/post/2020/09/09/test-chinese/hudai-gayiran-3Od_VKcDEAA-unsplash_hub241c2a9c7a2caf7e16a2a5bbc7141ff_18711_1024x0_resize_q75_box.jpg 1024w"
loading="lazy"
alt="Photo by Hudai Gayiran on Unsplash"
class="gallery-image"
data-flex-grow="66"
data-flex-basis="160px"
>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-markdown" data-lang="markdown">&lt;span class="line">&lt;span class="cl">![&lt;span class="nt">Photo by Florian Klauer on Unsplash&lt;/span>](&lt;span class="na">florian-klauer-nptLmg6jqDo-unsplash.jpg&lt;/span>) ![&lt;span class="nt">Photo by Luca Bravo on Unsplash&lt;/span>](&lt;span class="na">luca-bravo-alS7ewQ41M8-unsplash.jpg&lt;/span>)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">![&lt;span class="nt">Photo by Helena Hertz on Unsplash&lt;/span>](&lt;span class="na">helena-hertz-wWZzXlDpMog-unsplash.jpg&lt;/span>) ![&lt;span class="nt">Photo by Hudai Gayiran on Unsplash&lt;/span>](&lt;span class="na">hudai-gayiran-3Od_VKcDEAA-unsplash.jpg&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>相册语法来自 &lt;a class="link" href="https://typlog.com/" target="_blank" rel="noopener"
>Typlog&lt;/a>&lt;/p></description></item><item><title>Archives</title><link>https://ohcoder.com/page/2019/05/28/archives/</link><pubDate>Tue, 28 May 2019 00:00:00 +0000</pubDate><guid>https://ohcoder.com/page/2019/05/28/archives/</guid><description/></item><item><title>Markdown Syntax Guide</title><link>https://ohcoder.com/post/2019/03/11/markdown-syntax-guide/</link><pubDate>Mon, 11 Mar 2019 00:00:00 +0000</pubDate><guid>https://ohcoder.com/post/2019/03/11/markdown-syntax-guide/</guid><description>&lt;img src="https://ohcoder.com/post/2019/03/11/markdown-syntax-guide/pawel-czerwinski-8uZPynIu-rQ-unsplash.jpg" alt="Featured image of post Markdown Syntax Guide" />&lt;p>This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.&lt;/p>
&lt;h2 id="headings">Headings&lt;/h2>
&lt;p>The following HTML &lt;code>&amp;lt;h1&amp;gt;&lt;/code>—&lt;code>&amp;lt;h6&amp;gt;&lt;/code> elements represent six levels of section headings. &lt;code>&amp;lt;h1&amp;gt;&lt;/code> is the highest section level while &lt;code>&amp;lt;h6&amp;gt;&lt;/code> is the lowest.&lt;/p>
&lt;h1 id="h1">H1&lt;/h1>
&lt;h2 id="h2">H2&lt;/h2>
&lt;h3 id="h3">H3&lt;/h3>
&lt;h4 id="h4">H4&lt;/h4>
&lt;h5 id="h5">H5&lt;/h5>
&lt;h6 id="h6">H6&lt;/h6>
&lt;h2 id="paragraph">Paragraph&lt;/h2>
&lt;p>Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.&lt;/p>
&lt;p>Itatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.&lt;/p>
&lt;h2 id="blockquotes">Blockquotes&lt;/h2>
&lt;p>The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a &lt;code>footer&lt;/code> or &lt;code>cite&lt;/code> element, and optionally with in-line changes such as annotations and abbreviations.&lt;/p>
&lt;h4 id="blockquote-without-attribution">Blockquote without attribution&lt;/h4>
&lt;blockquote>
&lt;p>Tiam, ad mint andaepu dandae nostion secatur sequo quae.
&lt;strong>Note&lt;/strong> that you can use &lt;em>Markdown syntax&lt;/em> within a blockquote.&lt;/p>
&lt;/blockquote>
&lt;h4 id="blockquote-with-attribution">Blockquote with attribution&lt;/h4>
&lt;blockquote>
&lt;p>Don&amp;rsquo;t communicate by sharing memory, share memory by communicating.&lt;!-- raw HTML omitted -->
— &lt;!-- raw HTML omitted -->Rob Pike&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>&lt;!-- raw HTML omitted -->&lt;/p>
&lt;/blockquote>
&lt;h2 id="tables">Tables&lt;/h2>
&lt;p>Tables aren&amp;rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Name&lt;/th>
&lt;th>Age&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Bob&lt;/td>
&lt;td>27&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Alice&lt;/td>
&lt;td>23&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4 id="inline-markdown-within-tables">Inline Markdown within tables&lt;/h4>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Italics&lt;/th>
&lt;th>Bold&lt;/th>
&lt;th>Code&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;em>italics&lt;/em>&lt;/td>
&lt;td>&lt;strong>bold&lt;/strong>&lt;/td>
&lt;td>&lt;code>code&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>A&lt;/th>
&lt;th>B&lt;/th>
&lt;th>C&lt;/th>
&lt;th>D&lt;/th>
&lt;th>E&lt;/th>
&lt;th>F&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Lorem ipsum dolor sit amet, consectetur adipiscing elit.&lt;/td>
&lt;td>Phasellus ultricies, sapien non euismod aliquam, dui ligula tincidunt odio, at accumsan nulla sapien eget ex.&lt;/td>
&lt;td>Proin eleifend dictum ipsum, non euismod ipsum pulvinar et. Vivamus sollicitudin, quam in pulvinar aliquam, metus elit pretium purus&lt;/td>
&lt;td>Proin sit amet velit nec enim imperdiet vehicula.&lt;/td>
&lt;td>Ut bibendum vestibulum quam, eu egestas turpis gravida nec&lt;/td>
&lt;td>Sed scelerisque nec turpis vel viverra. Vivamus vitae pretium sapien&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="code-blocks">Code Blocks&lt;/h2>
&lt;h4 id="code-block-with-backticks">Code block with backticks&lt;/h4>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&amp;lt;!doctype html&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">html&lt;/span> &lt;span class="na">lang&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;en&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">head&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">meta&lt;/span> &lt;span class="na">charset&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;utf-8&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">title&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Example HTML5 Document&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">title&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">head&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">body&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Test&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">body&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">html&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="code-block-indented-with-four-spaces">Code block indented with four spaces&lt;/h4>
&lt;pre>&lt;code>&amp;lt;!doctype html&amp;gt;
&amp;lt;html lang=&amp;quot;en&amp;quot;&amp;gt;
&amp;lt;head&amp;gt;
&amp;lt;meta charset=&amp;quot;utf-8&amp;quot;&amp;gt;
&amp;lt;title&amp;gt;Example HTML5 Document&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;p&amp;gt;Test&amp;lt;/p&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code>&lt;/pre>
&lt;h4 id="code-block-with-hugos-internal-highlight-shortcode">Code block with Hugo&amp;rsquo;s internal highlight shortcode&lt;/h4>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&amp;lt;!doctype html&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">html&lt;/span> &lt;span class="na">lang&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;en&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">head&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">meta&lt;/span> &lt;span class="na">charset&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;utf-8&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">title&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Example HTML5 Document&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">title&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">head&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">body&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Test&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">body&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">html&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;h4 id="diff-code-block">Diff code block&lt;/h4>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-diff" data-lang="diff">&lt;span class="line">&lt;span class="cl">[dependencies.bevy]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git = &amp;#34;https://github.com/bevyengine/bevy&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">rev = &amp;#34;11f52b8c72fc3a568e8bb4a4cd1f3eb025ac2e13&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gd">- features = [&amp;#34;dynamic&amp;#34;]
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gd">&lt;/span>&lt;span class="gi">+ features = [&amp;#34;jpeg&amp;#34;, &amp;#34;dynamic&amp;#34;]
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="list-types">List Types&lt;/h2>
&lt;h4 id="ordered-list">Ordered List&lt;/h4>
&lt;ol>
&lt;li>First item&lt;/li>
&lt;li>Second item&lt;/li>
&lt;li>Third item&lt;/li>
&lt;/ol>
&lt;h4 id="unordered-list">Unordered List&lt;/h4>
&lt;ul>
&lt;li>List item&lt;/li>
&lt;li>Another item&lt;/li>
&lt;li>And another item&lt;/li>
&lt;/ul>
&lt;h4 id="nested-list">Nested list&lt;/h4>
&lt;ul>
&lt;li>Fruit
&lt;ul>
&lt;li>Apple&lt;/li>
&lt;li>Orange&lt;/li>
&lt;li>Banana&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Dairy
&lt;ul>
&lt;li>Milk&lt;/li>
&lt;li>Cheese&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="other-elements--abbr-sub-sup-kbd-mark">Other Elements — abbr, sub, sup, kbd, mark&lt;/h2>
&lt;p>&lt;!-- raw HTML omitted -->GIF&lt;!-- raw HTML omitted --> is a bitmap image format.&lt;/p>
&lt;p>H&lt;!-- raw HTML omitted -->2&lt;!-- raw HTML omitted -->O&lt;/p>
&lt;p>X&lt;!-- raw HTML omitted -->n&lt;!-- raw HTML omitted --> + Y&lt;!-- raw HTML omitted -->n&lt;!-- raw HTML omitted --> = Z&lt;!-- raw HTML omitted -->n&lt;!-- raw HTML omitted -->&lt;/p>
&lt;p>Press &lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->CTRL&lt;!-- raw HTML omitted -->+&lt;!-- raw HTML omitted -->ALT&lt;!-- raw HTML omitted -->+&lt;!-- raw HTML omitted -->Delete&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted --> to end the session.&lt;/p>
&lt;p>Most &lt;!-- raw HTML omitted -->salamanders&lt;!-- raw HTML omitted --> are nocturnal, and hunt for insects, worms, and other small creatures.&lt;/p>
&lt;h2 id="hyperlinked-image">Hyperlinked image&lt;/h2>
&lt;p>&lt;a class="link" href="https://google.com" target="_blank" rel="noopener"
>&lt;img src="https://www.google.com/images/branding/googlelogo/1x/googlelogo_light_color_272x92dp.png"
loading="lazy"
alt="Google"
>&lt;/a>&lt;/p>
&lt;section class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1" role="doc-endnote">
&lt;p>The above quote is excerpted from Rob Pike&amp;rsquo;s &lt;a class="link" href="https://www.youtube.com/watch?v=PAAkCSZUG1c" target="_blank" rel="noopener"
>talk&lt;/a> during Gopherfest, November 18, 2015.&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/section></description></item><item><title>Rich Content</title><link>https://ohcoder.com/post/2019/03/10/rich-content/</link><pubDate>Sun, 10 Mar 2019 00:00:00 +0000</pubDate><guid>https://ohcoder.com/post/2019/03/10/rich-content/</guid><description>&lt;p>Hugo ships with several &lt;a class="link" href="https://gohugo.io/content-management/shortcodes/#use-hugo-s-built-in-shortcodes" target="_blank" rel="noopener"
>Built-in Shortcodes&lt;/a> for rich content, along with a &lt;a class="link" href="https://gohugo.io/about/hugo-and-gdpr/" target="_blank" rel="noopener"
>Privacy Config&lt;/a> and a set of Simple Shortcodes that enable static and no-JS versions of various social media embeds.&lt;/p>
&lt;hr>
&lt;h2 id="youtube-privacy-enhanced-shortcode">YouTube Privacy Enhanced Shortcode&lt;/h2>
&lt;div class="video-wrapper">
&lt;iframe loading="lazy"
src="https://www.youtube.com/embed/ZJthWmvUzzc"
allowfullscreen
title="YouTube Video"
>
&lt;/iframe>
&lt;/div>
&lt;!-- raw HTML omitted -->
&lt;hr>
&lt;h2 id="twitter-simple-shortcode">Twitter Simple Shortcode&lt;/h2>
&lt;style type="text/css">
.twitter-tweet {
font: 14px/1.45 -apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen-Sans,Ubuntu,Cantarell,"Helvetica Neue",sans-serif;
border-left: 4px solid #2b7bb9;
padding-left: 1.5em;
color: #555;
}
.twitter-tweet a {
color: #2b7bb9;
text-decoration: none;
}
blockquote.twitter-tweet a:hover,
blockquote.twitter-tweet a:focus {
text-decoration: underline;
}
&lt;/style>
&lt;blockquote class="twitter-tweet">&lt;p lang="en" dir="ltr">“In addition to being more logical, asymmetry has the advantage that its complete appearance is far more optically effective than symmetry.”&lt;br>— Jan Tschichold &lt;a href="https://t.co/gcv7SrhvJb">pic.twitter.com/gcv7SrhvJb&lt;/a>&lt;/p>&amp;mdash; Graphic Design History (@DesignReviewed) &lt;a href="https://twitter.com/DesignReviewed/status/1085870671291310081?ref_src=twsrc%5Etfw">January 17, 2019&lt;/a>&lt;/blockquote>
&lt;!-- raw HTML omitted -->
&lt;hr>
&lt;h2 id="vimeo-simple-shortcode">Vimeo Simple Shortcode&lt;/h2>
&lt;style>
.__h_video {
position: relative;
padding-bottom: 56.23%;
height: 0;
overflow: hidden;
width: 100%;
background: #000;
}
.__h_video img {
width: 100%;
height: auto;
color: #000;
}
.__h_video .play {
height: 72px;
width: 72px;
left: 50%;
top: 50%;
margin-left: -36px;
margin-top: -36px;
position: absolute;
cursor: pointer;
}
&lt;/style>
&lt;div class="s_video_simple __h_video">
&lt;a href="https://vimeo.com/4.8912912e&amp;#43;07" rel="noopener" target="_blank">
&lt;img src="https://i.vimeocdn.com/video/337401969-979f0cc9f55fdf305fb8984e90d92639ec9d7ecc4c9dfbc6536e28edb43784ce-d_640" srcset="https://i.vimeocdn.com/video/337401969-979f0cc9f55fdf305fb8984e90d92639ec9d7ecc4c9dfbc6536e28edb43784ce-d_640 1x, https://i.vimeocdn.com/video/337401969-979f0cc9f55fdf305fb8984e90d92639ec9d7ecc4c9dfbc6536e28edb43784ce-d_640 2x" alt="Sing Jan Swing - Kinetic Type">
&lt;div class="play">&lt;svg version="1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 61 61">&lt;circle cx="30.5" cy="30.5" r="30.5" opacity=".8" fill="#000">&lt;/circle>&lt;path d="M25.3 19.2c-2.1-1.2-3.8-.2-3.8 2.2v18.1c0 2.4 1.7 3.4 3.8 2.2l16.6-9.1c2.1-1.2 2.1-3.2 0-4.4l-16.6-9z" fill="#fff">&lt;/path>&lt;/svg>&lt;/div>&lt;/a>&lt;/div>
&lt;h2 id="bilibilibi-shortcode">bilibilibi Shortcode&lt;/h2>
&lt;div class="video-wrapper">
&lt;iframe src="https://player.bilibili.com/player.html?as_wide=1&amp;amp;high_quality=1&amp;amp;page=1&amp;aid=498363026"
scrolling="no"
frameborder="no"
framespacing="0"
allowfullscreen="true"
>
&lt;/iframe>
&lt;/div>
&lt;h2 id="gist-shortcode">Gist Shortcode&lt;/h2>
&lt;script type="application/javascript" src="https://gist.github.com/spf13/7896402.js">&lt;/script></description></item><item><title>مثال نص</title><link>https://ohcoder.com/post/2019/03/09/%D9%85%D8%AB%D8%A7%D9%84-%D9%86%D8%B5/</link><pubDate>Sat, 09 Mar 2019 00:00:00 +0000</pubDate><guid>https://ohcoder.com/post/2019/03/09/%D9%85%D8%AB%D8%A7%D9%84-%D9%86%D8%B5/</guid><description>&lt;img src="https://ohcoder.com/post/2019/03/09/%D9%85%D8%AB%D8%A7%D9%84-%D9%86%D8%B5/matt-le-SJSpo9hQf7s-unsplash.jpg" alt="Featured image of post مثال نص" />&lt;h2 id="فقرة-1">فقرة 1&lt;/h2>
&lt;p>هذا النص هو مثال لنص يمكن أن يستبدل في نفس المساحة، لقد تم توليد هذا النص من &lt;a class="link" href="https://colorslab.com/textgator/" target="_blank" rel="noopener"
>مولد النص العربى&lt;/a>، حيث يمكنك أن تولد مثل هذا النص أو العديد من النصوص الأخرى إضافة إلى زيادة عدد الحروف التى يولدها التطبيق.
إذا كنت تحتاج إلى عدد أكبر من الفقرات يتيح لك مولد النص العربى زيادة عدد الفقرات كما تريد، النص لن يبدو مقسما ولا يحوي أخطاء لغوية، مولد النص العربى مفيد لمصممي المواقع على وجه الخصوص، حيث يحتاج العميل فى كثير من الأحيان أن يطلع على صورة حقيقية لتصميم الموقع.
ومن هنا وجب على المصمم أن يضع نصوصا مؤقتة على التصميم ليظهر للعميل الشكل كاملاً،دور مولد النص العربى أن يوفر على المصمم عناء البحث عن نص بديل لا علاقة له بالموضوع الذى يتحدث عنه التصميم فيظهر بشكل لا يليق.
هذا النص يمكن أن يتم تركيبه على أي تصميم دون مشكلة فلن يبدو وكأنه نص منسوخ، غير منظم، غير منسق، أو حتى غير مفهوم. لأنه مازال نصاً بديلاً ومؤقتاً.&lt;/p>
&lt;h2 id="فقرة-2">فقرة 2&lt;/h2>
&lt;p>هذا النص هو مثال لنص يمكن أن يستبدل في نفس المساحة، لقد تم توليد هذا النص من &lt;a class="link" href="https://colorslab.com/textgator/" target="_blank" rel="noopener"
>مولد النص العربى&lt;/a>، حيث يمكنك أن تولد مثل هذا النص أو العديد من النصوص الأخرى إضافة إلى زيادة عدد الحروف التى يولدها التطبيق.
إذا كنت تحتاج إلى عدد أكبر من الفقرات يتيح لك مولد النص العربى زيادة عدد الفقرات كما تريد، النص لن يبدو مقسما ولا يحوي أخطاء لغوية، مولد النص العربى مفيد لمصممي المواقع على وجه الخصوص، حيث يحتاج العميل فى كثير من الأحيان أن يطلع على صورة حقيقية لتصميم الموقع.
ومن هنا وجب على المصمم أن يضع نصوصا مؤقتة على التصميم ليظهر للعميل الشكل كاملاً،دور مولد النص العربى أن يوفر على المصمم عناء البحث عن نص بديل لا علاقة له بالموضوع الذى يتحدث عنه التصميم فيظهر بشكل لا يليق.
هذا النص يمكن أن يتم تركيبه على أي تصميم دون مشكلة فلن يبدو وكأنه نص منسوخ، غير منظم، غير منسق، أو حتى غير مفهوم. لأنه مازال نصاً بديلاً ومؤقتاً.&lt;/p>
&lt;h2 id="تجربة-rtl">تجربة RTL&lt;/h2>
&lt;p>كلمة 1 Text كلمة 2&lt;/p></description></item><item><title>Math Typesetting</title><link>https://ohcoder.com/post/2019/03/08/math-typesetting/</link><pubDate>Fri, 08 Mar 2019 00:00:00 +0000</pubDate><guid>https://ohcoder.com/post/2019/03/08/math-typesetting/</guid><description>&lt;p>Mathematical notation in a Hugo project can be enabled by using third party JavaScript libraries.&lt;/p>
&lt;p>In this example we will be using &lt;a class="link" href="https://katex.org/" target="_blank" rel="noopener"
>KaTeX&lt;/a>&lt;/p>
&lt;ul>
&lt;li>Create a partial under &lt;code>/layouts/partials/math.html&lt;/code>&lt;/li>
&lt;li>Within this partial reference the &lt;a class="link" href="https://katex.org/docs/autorender.html" target="_blank" rel="noopener"
>Auto-render Extension&lt;/a> or host these scripts locally.&lt;/li>
&lt;li>Include the partial in your templates like so:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="o">{{&lt;/span> &lt;span class="k">if&lt;/span> or .Params.math .Site.Params.math &lt;span class="o">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{{&lt;/span> partial &lt;span class="s2">&amp;#34;math.html&amp;#34;&lt;/span> . &lt;span class="o">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{{&lt;/span> end &lt;span class="o">}}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>To enable KaTex globally set the parameter &lt;code>math&lt;/code> to &lt;code>true&lt;/code> in a project&amp;rsquo;s configuration&lt;/li>
&lt;li>To enable KaTex on a per page basis include the parameter &lt;code>math: true&lt;/code> in content files&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Note:&lt;/strong> Use the online reference of &lt;a class="link" href="https://katex.org/docs/supported.html" target="_blank" rel="noopener"
>Supported TeX Functions&lt;/a>&lt;/p>
&lt;h3 id="examples">Examples&lt;/h3>
&lt;p>Block math:
$$
\varphi = 1+\frac{1} {1+\frac{1} {1+\frac{1} {1+\cdots} } }
$$&lt;/p></description></item><item><title>Emoji Support</title><link>https://ohcoder.com/post/2019/03/05/emoji-support/</link><pubDate>Tue, 05 Mar 2019 00:00:00 +0000</pubDate><guid>https://ohcoder.com/post/2019/03/05/emoji-support/</guid><description>&lt;img src="https://ohcoder.com/post/2019/03/05/emoji-support/the-creative-exchange-d2zvqp3fpro-unsplash.jpg" alt="Featured image of post Emoji Support" />&lt;p>Emoji can be enabled in a Hugo project in a number of ways.&lt;/p>
&lt;p>The &lt;a class="link" href="https://gohugo.io/functions/emojify/" target="_blank" rel="noopener"
>&lt;code>emojify&lt;/code>&lt;/a> function can be called directly in templates or &lt;a class="link" href="https://gohugo.io/templates/shortcode-templates/#inline-shortcodes" target="_blank" rel="noopener"
>Inline Shortcodes&lt;/a>.&lt;/p>
&lt;p>To enable emoji globally, set &lt;code>enableEmoji&lt;/code> to &lt;code>true&lt;/code> in your site&amp;rsquo;s &lt;a class="link" href="https://gohugo.io/getting-started/configuration/" target="_blank" rel="noopener"
>configuration&lt;/a> and then you can type emoji shorthand codes directly in content files; e.g.&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>The &lt;a class="link" href="http://www.emoji-cheat-sheet.com/" target="_blank" rel="noopener"
>Emoji cheat sheet&lt;/a> is a useful reference for emoji shorthand codes.&lt;/p>
&lt;hr>
&lt;p>&lt;strong>N.B.&lt;/strong> The above steps enable Unicode Standard emoji characters and sequences in Hugo, however the rendering of these glyphs depends on the browser and the platform. To style the emoji you can either use a third party emoji font or a font stack; e.g.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="line">&lt;span class="cl">.emoji {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> font-family: Apple Color Emoji, Segoe UI Emoji, NotoColorEmoji, Segoe UI Symbol, Android Emoji, EmojiSymbols;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>读《代码大全（第二版）》笔记（三）</title><link>https://ohcoder.com/post/2013/03/24/reading-code-complete3/</link><pubDate>Sun, 24 Mar 2013 00:00:00 +0000</pubDate><guid>https://ohcoder.com/post/2013/03/24/reading-code-complete3/</guid><description>&lt;img src="https://ohcoder.com/post/2013/03/24/reading-code-complete3/title.jpg" alt="Featured image of post 读《代码大全（第二版）》笔记（三）" />&lt;p>继续上一周的阅读，本周读了第三部分－变量。&lt;/p>
&lt;p>整个第三部分，包括第10章到第13章，一共有四章都是围绕变量展开。可见变量在程序设计当中有多重要。&lt;/p>
&lt;h2 id="第十章使用变量的一般事项">第十章－使用变量的一般事项&lt;/h2>
&lt;p>从本章标题中也可以看出，本章主要就是在讲变量的使用。&lt;/p>
&lt;p>本章一开始，作者就提到关于隐式变量声明的观点。例如：&lt;/p>
&lt;blockquote>
&lt;p>(Page.240)隐式变量声明对于任何一种语言来说都是最具危险性的特性之一&lt;/p>
&lt;/blockquote>
&lt;p>作者给出的解决办法是：&lt;/p>
&lt;ul>
&lt;li>关闭隐式声明&lt;/li>
&lt;li>声明全部的变量&lt;/li>
&lt;li>遵循某种命名规则&lt;/li>
&lt;li>检查变量名&lt;/li>
&lt;/ul>
&lt;p>其实，关于这一点，现代解释型脚本语言貌似很多都支持隐式声明，例如&lt;!-- raw HTML omitted -->Javascript&lt;!-- raw HTML omitted -->。但是作者说的并不无道理，我用脚本语言用的还不是很多，没有太多经验来总结其中的利弊，暂且采用作者说的方法。&lt;/p>
&lt;p>在作用域一节中，作者提出了两个概念，一个是&lt;/p>
&lt;blockquote>
&lt;p>(Page.245)跨度*”，另一个是“*(Page.246)存活时间(live time)。&lt;/p>
&lt;/blockquote>
&lt;p>所谓跨度，作者引出了其定义&lt;/p>
&lt;blockquote>
&lt;p>(Page.245)衡量又一个变量的不同引用点的靠近程度的一种方法是计算该变量的“跨度(span)。&lt;/p>
&lt;/blockquote>
&lt;p>所谓存活时间，&lt;/p>
&lt;blockquote>
&lt;p>(Page.246)即一个变量存在期间所跨越的语句总数。&lt;/p>
&lt;/blockquote>
&lt;p>也由此可见，对于变量来说保持跨度值和存活时间尽可能的短是主要目标。&lt;/p>
&lt;p>对于减小变量作用域，作者给出了一些建议。&lt;/p>
&lt;blockquote>
&lt;p>(Page.249)在循环开始之前再去初始化该循环里使用的变量，而不是在该循环所属的子程序的开始处初始化这些变量&lt;/p>
&lt;/blockquote>
&lt;p>对于这一条建议，作者的目的是能够在循环里正确的使用外部初始化的变量。比如你把一个变量的声明和使用这个变量的循环之间隔离的很远的话，当需要修改循环的时候比较不容易看到循环中使用的这个变量。&lt;/p>
&lt;blockquote>
&lt;p>(Page.249)直到变量即将被使用时再为其赋值&lt;/p>
&lt;/blockquote>
&lt;p>这一条建议，我觉得很容易理解，主要就是为了让代码的初始化更醒目。&lt;/p>
&lt;blockquote>
&lt;p>(Page.250)当对变量的作用域犹豫不决的时候，你应该倾向于选择该变量所能具有的最小作用域&lt;/p>
&lt;/blockquote>
&lt;p>这条建议，其实目的也是为了尽可能的降低变量的生存时间。&lt;/p>
&lt;blockquote>
&lt;p>(Page.252)采用越晚的绑定时间会越有利&lt;/p>
&lt;/blockquote>
&lt;p>关于绑定时间书中给出了三种情况：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Java示例：在编写代码时绑定其值的变量
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">titleBar&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">color&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">0xFF&lt;/span>&lt;span class="o">;&lt;/span> &lt;span class="c1">//0xFF is hex value for color blue
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Java示例：在编译时绑定其值的变量
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kd">private&lt;/span> &lt;span class="kd">static&lt;/span> &lt;span class="kd">final&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">COLOR_BLUE&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">0xFF&lt;/span>&lt;span class="o">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">private&lt;/span> &lt;span class="kd">static&lt;/span> &lt;span class="kd">final&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">TITLE_BAR_COLOR&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">COLOR_BLUE&lt;/span>&lt;span class="o">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">titleBar&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">color&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">TITLE_BAR_COLOR&lt;/span>&lt;span class="o">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Java示例：在运行时绑定其值的变量 titleBar.color =
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">ReadTitleBarColor&lt;/span>&lt;span class="o">();&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>关于这一点就不多做解释了。示例已经说明问题了。&lt;/p>
&lt;h2 id="第十一章变量名的力量">第十一章－变量名的力量&lt;/h2>
&lt;p>全章讲述的是变量命名，对于大的项目而言，好的变量名不但使程序更容易读懂和编写，而且还利于以后的bug调试。&lt;/p>
&lt;p>对于如何命名，书中提到了一点建议，我觉得之前可能做的也不太好。&lt;/p>
&lt;blockquote>
&lt;p>(Page.261)一个好记的名字反映的通常都是问题，而不是解决方案。一个好名字通常表达的是“什么”(what)，而不是“如何”(how)。&lt;/p>
&lt;/blockquote>
&lt;p>作者说，&lt;/p>
&lt;blockquote>
&lt;p>(Page.261)一般而言，如果一个名字反映了计算的某些方面而不是问题本身，那么它反映的就是“how”而非“what”了。&lt;/p>
&lt;/blockquote>
&lt;p>关于名字的长度，文中提到&lt;/p>
&lt;blockquote>
&lt;p>(Page.262)当变量名的平均长度在10到16个字符的时候，调试程序所需花费的力气是最小的(1990)。&lt;/p>
&lt;/blockquote>
&lt;p>其实，我觉得， &lt;!-- raw HTML omitted -->Objective
C&lt;!-- raw HTML omitted --> 这门语言天生就挺符合这个要求的，不用你刻意去注意，哈哈。&lt;/p>
&lt;p>对于变量中使用计算限定词，文中也给出了很好的建议。&lt;/p>
&lt;blockquote>
&lt;p>(Page.263)如果你要用类似与Total、Sum、Average、Max、Min、Record、String、Pointer这样的限定词来修改某个名字，那么请记住把限定词加到限定词名字的最后。&lt;/p>
&lt;/blockquote>
&lt;p>对于文中所说何时采用命名规则，我觉得，平时就养成这个习惯吧，不论怎样，这个习惯都不是一个坏习惯。&lt;/p>
&lt;p>与语言无关的命名规则的指导原则，书中也给出了几种方案(Page.272)。&lt;/p>
&lt;p>&lt;strong>方案1&lt;/strong>: 通过大写字母开头区分类型和变量，例如： &lt;!-- raw HTML omitted -->Widget 与 widget;&lt;!-- raw HTML omitted --> &lt;!-- raw HTML omitted -->LongerWidget 与 longerWidget;&lt;!-- raw HTML omitted -->&lt;/p>
&lt;p>&lt;strong>方案2&lt;/strong>: 通过全部大写区分类型和变量，例如： &lt;!-- raw HTML omitted -->WIDGET 与 widget;&lt;!-- raw HTML omitted --> &lt;!-- raw HTML omitted -->LONGERWIDGET 与 longerWidget;&lt;!-- raw HTML omitted -->&lt;/p>
&lt;p>&lt;strong>方案3&lt;/strong>: 通过给类型“t_”前缀区分类型和变量，例如： &lt;!-- raw HTML omitted -->t_Widget 与 widget;&lt;!-- raw HTML omitted --> &lt;!-- raw HTML omitted -->t_LongerWidget 与 LongerWidger;&lt;!-- raw HTML omitted -->&lt;/p>
&lt;p>&lt;strong>方案4&lt;/strong>: 通过给变量“a”前缀区分类型和变量，例如： &lt;!-- raw HTML omitted -->Widget 与 aWidget;&lt;!-- raw HTML omitted --> &lt;!-- raw HTML omitted -->LongerWidget 与 aLongWidget;&lt;!-- raw HTML omitted -->&lt;/p>
&lt;p>&lt;strong>方案5&lt;/strong>: 通过对变量采用更明确的名字区分类型和变量，例如： &lt;!-- raw HTML omitted -->Widget 与 employeeWidget;&lt;!-- raw HTML omitted --> &lt;!-- raw HTML omitted -->LongerWidget  与fullEmployeeWidget;&lt;!-- raw HTML omitted -->&lt;/p>
&lt;p>书中对每一种方案的优缺点做了描述(Page.272~Page.273)：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>第一种方案是在大小写敏感语言如 C++ 和 Java 里常用的规则，但是有些程序员对仅依靠大小写区分名字感到不大舒服。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>第二种方案使类型名和变量名之间的差异更加鲜明。然而，由于历史原因，在 C++ 和 Java 里面全部字母大写只用于表示常量，同时这种方案也会与第一种方案一样面临混合语言环境的问题。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>第三种方案可用于所有语言，但是很多程序员从审美的角度出发并不喜欢增加前缀。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>第四种方案有时会用作第三种方案的备选项，但是它存在的问题是需要改变类的每个实例的名字，而不是仅仅修改类名。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>第五种方案要求基于每个变量的实际情况作出更多的考虑。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>本章后面说了下应该避免的命名指导原则，原则有很多，我觉得都是非常常见的命名错误，在这里就不罗列了。&lt;/p>
&lt;h2 id="第十二章基本数据类型">第十二章－基本数据类型&lt;/h2>
&lt;p>本章对每一种基本数据类型的使用进行了详细讲解。首先从全局上给出了一些建议(Page.292~Page.293)。&lt;/p>
&lt;ul>
&lt;li>避免使用“神秘数值(magic number)” 。如果需要，可以使用硬编码的 0 和 1&lt;/li>
&lt;li>预防除零(devide-by-zero)错误，使类型转换变得明显。&lt;/li>
&lt;li>避免混合类型的比较，注意编译器的警告。&lt;/li>
&lt;/ul>
&lt;p>本章后面的基本类型差不多都是围绕着上面这几点根据具体的类型特点展开来讲的。其中印象比较深刻的是关于浮点数的一条建议：&lt;/p>
&lt;blockquote>
&lt;p>(Page.295)避免等量判断&lt;/p>
&lt;/blockquote>
&lt;p>很早之前掉进过这个坑。记得当时用了两个浮点数值进行等值判断，结果相等的概率非常的低，后来打印了一下数值，才发现掉到坑去里了，后来就长记性了，呵呵。&lt;/p>
&lt;p>对于&lt;!-- raw HTML omitted -->C&lt;!-- raw HTML omitted -->语言的字符串的使用，有几个建议印象比较深刻。&lt;/p>
&lt;blockquote>
&lt;p>(Page.299)把C-Style字符串的长度声明为CONSTANT + 1&lt;/p>
&lt;/blockquote>
&lt;p>这一条建议可以避免循环数组时越界，当然这种写法在很多算法书中也很常见。&lt;/p>
&lt;blockquote>
&lt;p>(Page.300)用null初始化字符串以避免无结束符的字符串&lt;/p>
&lt;/blockquote>
&lt;p>这条在平时初始化的时候也很受用。下面这条是关于分配内存并初始化的建议。&lt;/p>
&lt;blockquote>
&lt;p>(Page.300)其次，在你动态分配字符串的时候，使用calloc()而不是malloc()来把它初始化为0。calloc()会负责分配内存，并把它初始化为0。malloc()只分配内存，并不执行初始化。……&lt;/p>
&lt;/blockquote>
&lt;p>对于定义枚举类型，文中给出了两条之前没有注意的点。&lt;/p>
&lt;blockquote>
&lt;p>(Page.305)定义出枚举的第一项和最后一项，以便用于循环边界&lt;/p>
&lt;/blockquote>
&lt;p>这一点以前还真没注意过，以后要注意了。还有下一点，我觉得也是蛮有道理的，虽然表面上感觉有点小聪明的意思，呵呵。&lt;/p>
&lt;blockquote>
&lt;p>(Page.305)把枚举类型的第一个元素留作非法值&lt;/p>
&lt;/blockquote>
&lt;p>本章后面谈论了一下使用&lt;!-- raw HTML omitted -->typedef&lt;!-- raw HTML omitted -->进行自定义类型，感觉没有太多要说的。&lt;/p>
&lt;h2 id="第十三章不常见的数据类型">第十三章－不常见的数据类型&lt;/h2>
&lt;p>本章主要是在讲非基本数据类型。主要包括结构、指针、全局数据。其实，关于这一章里，结构没有什么好说的，很多常见的语法书中该说的基本都说到了，包括结构化数据的优点等。关于 &lt;!-- raw HTML omitted -->C/C++&lt;!-- raw HTML omitted --> 语言指针部分，其实很多基本概念在一些权威的书中基本也都提到过，没什么感觉。最后的讲了全局数据，当然主要就是全局数据的弊端占用了很多篇幅，以及如何避免使用全局数据等。避免的方式，感觉还是通过重构，尽量使程序模块化，降低变量的生存时间，也避免在内存堆中分配空间，达到节省内存的目的等等。&lt;/p>
&lt;p>总体来说，这部分的内容不少，但是有些知识已经在一些权威的语法书中能够找到，读起来相对来说没有前两部分难懂，可能有些问题是平时写程序的时候经常会碰到的原因吧，见的多了，神经就有点麻木了，呵呵。&lt;/p></description></item><item><title>Vim 关于 Ruby 的简单配置，日子前松后紧</title><link>https://ohcoder.com/post/2013/03/17/vim-ruby-config/</link><pubDate>Sun, 17 Mar 2013 00:00:00 +0000</pubDate><guid>https://ohcoder.com/post/2013/03/17/vim-ruby-config/</guid><description>&lt;img src="https://ohcoder.com/post/2013/03/17/vim-ruby-config/title.jpg" alt="Featured image of post Vim 关于 Ruby 的简单配置，日子前松后紧" />&lt;p>本周过的有点前松后紧。除了读书，写了一篇简要的&lt;!-- raw HTML omitted -->摘录&lt;!-- raw HTML omitted -->外，关于&lt;!-- raw HTML omitted -->Ruby&lt;!-- raw HTML omitted -->，也做了初步的学习。&lt;/p>
&lt;p>至于&lt;!-- raw HTML omitted -->Ruby&lt;!-- raw HTML omitted -->的入门学习，大体完成了两件事情。&lt;/p>
&lt;p>第一件事情跟着一个&lt;!-- raw HTML omitted -->Ruby&lt;!-- raw HTML omitted -->的&lt;!-- raw HTML omitted -->入门教程&lt;!-- raw HTML omitted -->看了一遍，基本上把教程里的代码都敲了一遍。教程的译作者很牛b，是台湾著名的 &lt;!-- raw HTML omitted -->XDite&lt;!-- raw HTML omitted -->，在&lt;!-- raw HTML omitted -->Ruby&lt;!-- raw HTML omitted -->圈子很有名气，据说去年(2012年9月)还获得了 Facebook World Hack 第一名。&lt;/p>
&lt;p>第二件事情是了解一下 &lt;!-- raw HTML omitted -->ruby-china&lt;!-- raw HTML omitted --> 论坛。大概了解下其中主要的四位发起人。通过论坛了解下国内&lt;!-- raw HTML omitted -->Ruby&lt;!-- raw HTML omitted -->的大致的现状。并在&lt;!-- raw HTML omitted -->Podcast&lt;!-- raw HTML omitted -->上订阅了他们制作的 &lt;!-- raw HTML omitted -->Teahour&lt;!-- raw HTML omitted -->，并听了所有内容，不管是扯淡的，还是谈论学习经验的。总体感觉大家都很热情，积极的做了很多关于&lt;!-- raw HTML omitted -->Ruby&lt;!-- raw HTML omitted -->在中国推广的工作。还利用业余时间做了很多&lt;!-- raw HTML omitted -->Ruby&lt;!-- raw HTML omitted -->的&lt;!-- raw HTML omitted -->教学视频&lt;!-- raw HTML omitted -->。对于学习&lt;!-- raw HTML omitted -->Ruby&lt;!-- raw HTML omitted -->和了解&lt;!-- raw HTML omitted -->Rails&lt;!-- raw HTML omitted -->的新手来说，我想帮助还是很大的。&lt;/p>
&lt;p>一路了解下来，我觉得还是蛮喜欢&lt;!-- raw HTML omitted -->Ruby&lt;!-- raw HTML omitted -->的。至少想把&lt;!-- raw HTML omitted -->Ruby&lt;!-- raw HTML omitted -->作为学习iOS之外的业余爱好吧。想在&lt;!-- raw HTML omitted -->Web&lt;!-- raw HTML omitted -->上实现一点小玩意儿什么的，就用&lt;!-- raw HTML omitted -->Ruby&lt;!-- raw HTML omitted -->试着实现下。对于持续了解&lt;!-- raw HTML omitted -->Web&lt;!-- raw HTML omitted -->技术算是一个纽带吧，毕竟互联网是一个不能忽视的方向，保持技术上的不断更新也是为了不让自己轻易掉队。&lt;/p>
&lt;p>学习了几天，发现对&lt;!-- raw HTML omitted -->Vim&lt;!-- raw HTML omitted -->的熟练使用是一个不可回避的问题。其中包括常见的快捷键，还有一些开发过程中常用的插件。关于这些插件，我大致安装了下面几个：&lt;/p>
&lt;ul>
&lt;li>&lt;a class="link" href="https://github.com/tpope/vim-pathogen" target="_blank" rel="noopener"
>pathogen&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>简述：&lt;!-- raw HTML omitted -->Runtimepath&lt;!-- raw HTML omitted -->管理插件&lt;/p>
&lt;p>Mac安装方法：见插件主页&lt;/p>
&lt;ul>
&lt;li>&lt;a class="link" href="http://www.vim.org/scripts/script.php?script_id=1658" target="_blank" rel="noopener"
>NERD tree&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>简述：&lt;!-- raw HTML omitted -->Vim&lt;!-- raw HTML omitted -->文件查看目录树插件&lt;/p>
&lt;p>Mac安装方法：见插件主页&lt;/p>
&lt;ul>
&lt;li>&lt;a class="link" href="http://kien.github.com/ctrlp.vim/" target="_blank" rel="noopener"
>ctrlp&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>简述：文件匹配，实现目录跳转插件&lt;/p>
&lt;p>Mac安装方法：见插件主页&lt;/p>
&lt;ul>
&lt;li>&lt;a class="link" href="https://github.com/tpope/vim-rails" target="_blank" rel="noopener"
>vim-rails&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>简述：转向类型定义，目录文件输入自动补全插件&lt;/p>
&lt;p>Mac安装：见插件主页&lt;/p>
&lt;ul>
&lt;li>&lt;a class="link" href="https://github.com/garbas/vim-snipmate" target="_blank" rel="noopener"
>snipmate&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>简述：编写代码自动补全插件&lt;/p>
&lt;p>Mac安装：见&lt;!-- raw HTML omitted -->网页&lt;!-- raw HTML omitted -->(视频在YouTube上，需要翻墙)&lt;/p>
&lt;ul>
&lt;li>&lt;a class="link" href="http://betterthangrep.com/" target="_blank" rel="noopener"
>ack&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>简述：搜索插件&lt;/p>
&lt;p>Mac安装：打开终端，输入命令&lt;!-- raw HTML omitted -->brew install ack&lt;!-- raw HTML omitted -->&lt;/p>
&lt;ul>
&lt;li>&lt;a class="link" href="http://sourceforge.net/projects/ctags/" target="_blank" rel="noopener"
>ctags&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>简述：跳转至方法定义插件&lt;/p>
&lt;p>Mac 安装：打开终端，输入命令 &lt;!-- raw HTML omitted -->brew install ctags-exuberant&lt;!-- raw HTML omitted -->&lt;/p>
&lt;p>这里只是简单对插件做了一个陈列，railscasts 有一个专门介绍的&lt;!-- raw HTML omitted -->视频&lt;!-- raw HTML omitted -->。视频中只对插件做了使用和功能上的介绍，并没有说明安装方法，有兴趣的同学也可以了解下。&lt;/p>
&lt;p>整体来说，这个礼拜算是对 Ruby 的学习大致了解了下，接下来我想重心当然还是 iOS 了，&lt;!-- raw HTML omitted -->Ruby&lt;!-- raw HTML omitted -->的学习算是作为学习&lt;!-- raw HTML omitted -->Web&lt;!-- raw HTML omitted -->的一个切入点吧。还有另外一方面的考虑，那就是我对&lt;!-- raw HTML omitted -->Vim&lt;!-- raw HTML omitted -->的快捷键的熟练程度掌握还不够，学习 iOS 的同时练习一下&lt;!-- raw HTML omitted -->Vim&lt;!-- raw HTML omitted -->的快捷键也算是为学习&lt;!-- raw HTML omitted -->Ruby&lt;!-- raw HTML omitted -->打一个基础吧。&lt;/p>
&lt;p>其实，对于&lt;!-- raw HTML omitted -->Ruby&lt;!-- raw HTML omitted -->的编程风格，我感觉和&lt;!-- raw HTML omitted -->Objective C&lt;!-- raw HTML omitted -->有几分相像，具体我还说不上来，因为我对&lt;!-- raw HTML omitted -->Ruby&lt;!-- raw HTML omitted -->还不够了解。我想随着不断的深入学习，会有一些体会吧。&lt;/p>
&lt;p>日子过的好快，眼看就要进入三月中下旬了&amp;hellip;&amp;hellip;，要努力了&amp;hellip;&amp;hellip;&lt;/p></description></item><item><title>读《代码大全（第二版）》笔记（二）</title><link>https://ohcoder.com/post/2013/03/17/reading-code-complete2/</link><pubDate>Sun, 17 Mar 2013 00:00:00 +0000</pubDate><guid>https://ohcoder.com/post/2013/03/17/reading-code-complete2/</guid><description>&lt;img src="https://ohcoder.com/post/2013/03/17/reading-code-complete2/title.jpg" alt="Featured image of post 读《代码大全（第二版）》笔记（二）" />&lt;p>本周读了第二部分－&lt;strong>创建高质量的代码&lt;/strong>。&lt;/p>
&lt;p>说实话，真的好后悔没有早点读这本书，觉得自己以前写的代码就是一坨&lt;!-- raw HTML omitted -->Shǐ&lt;!-- raw HTML omitted -->。看书的过程中，一边看就觉得后脊梁发凉，一阵阵凉风从后背吹过……&lt;/p>
&lt;p>本部分分为五章，基本上还是从顶层设计角度探讨了如何更好的编写代码。分别从软件的设计、类的封装、子程序的设计以及防御式编程和使用伪代码进行开发方法方面进行了探讨。感觉书中需要学习点太多了，好多方面看完之后都有感触。想了想，如果都列出来感觉可以写一本小册子了，所以在这里还是随意挑几个标题大(Y( ^ _ ^ )Y)的记录一下吧，太细的点就不列了。不过虽然有的点不是大标题，但并不代表这些点不重要，有时间的话，我想我还会经常回过头来当手册来翻一翻的。&lt;/p>
&lt;h2 id="第五章软件创建中的设计">第五章－软件创建中的设计&lt;/h2>
&lt;p>本章的一个核心思想是如何更合理的控制复杂度。&lt;/p>
&lt;blockquote>
&lt;p>(Page.77)软件的首要技术使命：管理复杂度&lt;/p>
&lt;/blockquote>
&lt;p>书中首先阐述了管理复杂度的重要性，并指出产生高代价、低效率的设计源于下面三种根源：&lt;/p>
&lt;ul>
&lt;li>用复杂的方法解决简单的问题；&lt;/li>
&lt;li>用简单但错误的方法解决复杂的问题；&lt;/li>
&lt;li>用不恰当的复杂方法解决复杂的问题。&lt;/li>
&lt;/ul>
&lt;p>关于这一点，书中描述了两种方法来解决这个问题：&lt;/p>
&lt;ul>
&lt;li>把任何人在同一时间需要处理的本质（essential）复杂度的量减到最少；&lt;/li>
&lt;li>不要让偶然性（accidental）的复杂度无谓地快速增长。&lt;/li>
&lt;/ul>
&lt;p>关于如何控制复杂度这个问题，看了下整本书的目录，不管是从顶层对软件的设计，还是深入到底层的代码编写，貌似都是为了更好的控制复杂度，不过我整本书还没看完，只是感觉而已。&lt;/p>
&lt;p>回过头来想了想，在我曾经做过的项目中。虽然有的项目外表上看起来算是完成了，不过我感觉，在做项目的过程中，多少都冒犯了上面指出的三种根源。只不过上面总结的很抽象，具体实施起来会涉及到很多方面。呵呵，这当然是一个复杂的问题。&lt;/p>
&lt;p>随后，书中说了理想的设计特征包括哪些范畴：&lt;/p>
&lt;ul>
&lt;li>最小的复杂度（Minimal complexity）&lt;/li>
&lt;li>易于维护（Ease of maintenance）&lt;/li>
&lt;li>松散耦合（loose coupling）&lt;/li>
&lt;li>可扩展性（extensibility）&lt;/li>
&lt;li>高扇入（high fan-in）&lt;/li>
&lt;li>低扇出（low fan-out）&lt;/li>
&lt;li>可移植性（portability）&lt;/li>
&lt;li>精简性（leanness）&lt;/li>
&lt;li>层次性（stratification）&lt;/li>
&lt;li>标准技术（Standard techniques）&lt;/li>
&lt;/ul>
&lt;p>其中，关于最小的复杂度部分，我觉得书中有一句话说的很形象。&lt;/p>
&lt;blockquote>
&lt;p>(Page.80)如果你的设计方案不能让你在专注于程序的一部分时安心地忽视其他部分地话，这一设计就没有什么作用了。&lt;/p>
&lt;/blockquote>
&lt;p>精简性方面，书中指出&lt;/p>
&lt;blockquote>
&lt;p>(Page.81)精简性意味着设计出的系统没有多余的部分(Wirth 1995,McConnell 1997)。&lt;/p>
&lt;/blockquote>
&lt;p>除此之外，对于高扇入和低扇出，其实之前貌似重视不够，尤其是低扇出，以后要注意这一点了，至于其他方面，平时看的也比较多，应该还算是不陌生吧。&lt;/p>
&lt;p>书中后面讲到隐藏秘密(信息隐藏)。这其中主要分为了两大类：&lt;/p>
&lt;ul>
&lt;li>隐藏复杂度&lt;/li>
&lt;li>隐藏变化源&lt;/li>
&lt;/ul>
&lt;p>老实说，看过这部分之后，回想了下之前写过的代码，我觉得做的很不够，和书中所描述的点相差甚远，真是觉得汗颜。也感觉到设计好的接口是如此之难，能够设计好的接口真不是简单吹吹牛就能做好的，需要多方面的综合考虑才有可能更合理的对接口进行设计。&lt;/p>
&lt;p>对于设计模式的用处，书中列出了设计模式的几个益处，我想根据这几个点，多少也可以指导我们平时如何更合理的使用设计模式吧。&lt;/p>
&lt;ul>
&lt;li>设计模式通过提供现成的抽象来减少复杂度&lt;/li>
&lt;li>设计模式通过把常见解决方案的细节予以制度化来减少出错&lt;/li>
&lt;li>设计模式通过提供多种设计方案而带来启发性的价值&lt;/li>
&lt;li>设计模式通过把设计对话提升到一个更高的层次上来简化交流&lt;/li>
&lt;/ul>
&lt;p>对于这几个益处，针对设计模式，我觉得，设计模式仅仅是一种框架，可以用来降低复杂度，减少错误，可以依赖这些模式做一些变化来适应需要解决的问题，最后是利于码农之间更好的交流。所以从这几个方面看，学习设计模式一定不要死记硬背，更好的掌握使用这些模式的场景更重要，所谓手中无剑，心中也无剑，此为高手。&lt;/p>
&lt;p>关于这章的其他部分提了一些具体实践的方法，说了一些方法论，和具体实践结合很紧密。关于保持松散耦合这方面，书中也提了哪些方面可能会产生耦合，以及耦合常见的形式。&lt;/p>
&lt;p>本章后面讨论了一下自上而下和自下而上的设计方法。作者的结论是，两种方式各有利弊，并非排斥关系。自上而下从一般性的问题出发，把该问题分解成可控的部分。而自下而上从可控的部分出发，去构造一个适用的方案。这两种方法都有各自的强项和弱项。设计过程中，你会受益于二者的相互协作。&lt;/p>
&lt;h2 id="第六章可以工作的类">第六章－可以工作的类&lt;/h2>
&lt;p>本章讨论了设计类的接口。书中给出了几个C++的代码例子，以说明良好的接口应该如何设计。书中有几个点很有启发性，其中有一句是&lt;/p>
&lt;blockquote>
&lt;p>(Page.138)关注类的接口所表现出来的抽象，比关注类的内聚性更有助于深入地理解类的设计&lt;/p>
&lt;/blockquote>
&lt;p>对于类进行良好的封装，作者给出了几条建议：&lt;/p>
&lt;blockquote>
&lt;p>(Page.139)尽可能地限制类和成员的可访问性&lt;/p>
&lt;/blockquote>
&lt;p>关于这条建议，书中引用了Meyers的一句话，&lt;/p>
&lt;blockquote>
&lt;p>(Page.139)应该采用最严格且可行的访问级别(Meyers 1998,Block 2001)。&lt;/p>
&lt;/blockquote>
&lt;p>意思很明显，就是说，如果你不确定，那么多隐藏通常比少隐藏要好。&lt;/p>
&lt;blockquote>
&lt;p>(Page.139)不要公开暴露成员数据&lt;/p>
&lt;/blockquote>
&lt;p>这一点很明显，暴露成员数据会破坏封装性。这一点对于 C++ 来说更应该注意，因为对于 &lt;!-- raw HTML omitted -->C#&lt;!-- raw HTML omitted --> 和 &lt;!-- raw HTML omitted -->Java&lt;!-- raw HTML omitted --> 来说都有对应的访问器来隐藏成员数据，而 &lt;!-- raw HTML omitted -->Objective C&lt;!-- raw HTML omitted -->，则会对每个向外暴露的成员同样也会生成对应 &lt;!-- raw HTML omitted -->Set&lt;!-- raw HTML omitted --> 和 &lt;!-- raw HTML omitted -->Get&lt;!-- raw HTML omitted --> 方法。呃，对于语言的讨论就此打住吧&amp;hellip;&amp;hellip;&lt;/p>
&lt;blockquote>
&lt;p>(Page.139)避免把私用的实现细节放入类的接口中&lt;/p>
&lt;/blockquote>
&lt;p>对于这一点，原来一起工作的同事有讨论过相关的问题。对于这一点《&lt;a class="link" href="http://book.douban.com/subject/5387403/" target="_blank" rel="noopener"
>Effective C++&lt;/a>》书中也有详细讨论，具体的可以翻一翻这本书。另外，这一点感觉也是&lt;!-- raw HTML omitted -->C++&lt;!-- raw HTML omitted -->的一个坑，其他语言应该可以比较容易的规避这个问题。&lt;/p>
&lt;blockquote>
&lt;p>(Page.141)不要对类的使用者做出任何假设&lt;/p>
&lt;/blockquote>
&lt;p>关于这一点，我想没什么好解释的，很显然的事情。&lt;/p>
&lt;blockquote>
&lt;p>(Page.141)避免使用友元类(friend class)&lt;/p>
&lt;/blockquote>
&lt;p>书中说到，&lt;/p>
&lt;blockquote>
&lt;p>(Page.141)一般情况下友元类会破坏封装，因为它让你在同一时刻需要考虑更多的代码量，从而增加了复杂度。&lt;/p>
&lt;p>(Page.141)不要因为一个子程序里仅使用公用子程序，就把它归入公开接口&lt;/p>
&lt;/blockquote>
&lt;p>这一点考虑的问题是，如果把某个子程序暴露给外界后，接口所展示的抽象是否还能保持一致。&lt;/p>
&lt;blockquote>
&lt;p>(Page.141)让阅读代码比编写代码更方便&lt;/p>
&lt;/blockquote>
&lt;p>关于这一点，书中强调还是代码的可读性。时刻要防止接口设计的一致性问题，一旦出现接口定义不规范的问题后，不但开始影响代码的可读性，而且还有可能会出现《&lt;a class="link" href="http://book.douban.com/subject/1152111/" target="_blank" rel="noopener"
>程序员修炼之道&lt;/a>》中所说的破窗户问题。&lt;/p>
&lt;blockquote>
&lt;p>(Page.141)要格外警惕从语意破坏封装性&lt;/p>
&lt;/blockquote>
&lt;p>对于语意上对于封装性的破坏，书中列出了五种情况，这里有不一一列出了。其实中心思想就是不要让类的内部实现影响外部调用，其中包括外部对类的调用顺序的限制。如果你发现封装的类，从外部调用的时候需要考虑内部实现，这时候其实就是破坏了类的封装性。&lt;/p>
&lt;blockquote>
&lt;p>(Page.142)留意过于紧密的耦合关系&lt;/p>
&lt;/blockquote>
&lt;p>对于耦合的关注，我觉得再怎么强调也不为过。&lt;/p>
&lt;p>对于继承的使用，看完书之后，我的感受是，一定要小心谨慎！书中给出了什么情况下应该使用继承，什么情况下应该使用包含(Page.149)：&lt;/p>
&lt;ul>
&lt;li>如果多个类共享数据而非行为，应该创建这些类可以包含的共用对象。&lt;/li>
&lt;li>如果多个类共享行为而非数据，应该让它们从共同的基类继承而来，并在基类里定义共用的子程序。&lt;/li>
&lt;li>如果多个类既共享数据也共享行为，应该让它们从一个共同的基类继承而来，并在基类里定义共用的数据和子程序。&lt;/li>
&lt;li>当你想由基类控制接口时，使用继承；当你想自己控制接口时，使用包含。&lt;/li>
&lt;/ul>
&lt;p>对于上面的规则，我的总结了一下，只要涉及到控制接口的就选择继承，只涉及数据的就用包含。&lt;/p>
&lt;p>本章后面说了下创建类的原因，基本上都是一些原则性的指导。并在随后给出了三类应该避免的类(Page.155)：&lt;/p>
&lt;ul>
&lt;li>避免创建万能类(god class)&lt;/li>
&lt;li>消除无关紧要的类&lt;/li>
&lt;li>避免用动词命名的类&lt;/li>
&lt;/ul>
&lt;h2 id="第七章高质量的子程序">第七章－高质量的子程序&lt;/h2>
&lt;p>这一章整体在讲如何设计好的子程序。比如本章的第一节讨论了创建子程序的正当理由，说了几点为什么要创建子程序，目的是什么，创建子程序解决了什么问题。随后书中描述了如何设计合理的子程序。不过，我觉得对于书中讨论的关于子程序可以写多长觉得蛮好玩的，作者的观点是，如果编写了一段超过 200 行代码的子程序，那你就应该小心了。说到这里，我想起在我刚开始写程序的时候，隐约记得写过一个远比 200 行长的多的函数，具体几行忘记了，只记得很长很长，而且方法的参数有输入也有输出，最蛋疼的是没有给出哪几个参数是输出，哪几个参数是输入。现在想想，基本上这个方法只有我会调用，(￣▽￣) 。&lt;/p>
&lt;p>对于子程序的参数，书中也做了讨论，并明确指出把子程序的参数个数限制在大约7个以内，并要求采用某种表示输入、修改、输出的命名规则。&lt;/p>
&lt;p>书中对于函数和过程给出简单的区分。&lt;/p>
&lt;blockquote>
&lt;p>(Page.181)函数是指有返回值的子程序；过程是指没有返回值的子程序&lt;/p>
&lt;/blockquote>
&lt;p>不过在 C++ 中，通常把所有子程序都称为“函数”；返回值类型为 &lt;!-- raw HTML omitted -->void&lt;!-- raw HTML omitted --> 的函数在语义上其实就是过程。关于宏的使用，很明确，尽量少用，尤其是宏子程序。至于内联子程序，作者的建议是节制使用，因为内联子程序违反了封装原则。&lt;/p>
&lt;h2 id="第八章防御式编程">第八章－防御式编程&lt;/h2>
&lt;p>对于防御式编程来说，重点还是讨论了断言。&lt;/p>
&lt;blockquote>
&lt;p>(Page.189)断言为真，则表明程序运行正常，而断言为假，则意味着它已经在代码中发现了意料之外的错误。&lt;/p>
&lt;/blockquote>
&lt;p>至于断言和错误处理的使用的指导建议是，&lt;/p>
&lt;blockquote>
&lt;p>(Page.191)用错误处理代码来处理预期会发生的状况，用断言来处理绝不应该发生的状况&lt;/p>
&lt;/blockquote>
&lt;p>对于错误处理技术的使用，根据不同的使用场景给出了不同的建议。例如医疗设备控制软件，如果发生了医疗故障，为了保证患者的安全，应该立刻关闭程序等。防御式编程全部的重点在于防御那些未曾预料到的错误。&lt;/p>
&lt;p>本章随后讨论了异常。对于异常的使用给出了几条建议。例如，&lt;/p>
&lt;blockquote>
&lt;p>(Page.199)不能用异常来推卸责任&lt;/p>
&lt;/blockquote>
&lt;p>其实就是说，哪里出现了问题就在哪里解决，不要让规避问题的存在，或者说是遮掩问题。&lt;/p>
&lt;blockquote>
&lt;p>不要在构造函数和析构函数中使用异常，除非你在同一地方把它们捕获&lt;/p>
&lt;/blockquote>
&lt;p>在构造函数中处理异常会让问题变的很麻烦，其中最重要的问题就是资源的泄漏问题。&lt;/p>
&lt;p>书中提到了隔栏(barricade)这个词。并定义说&lt;/p>
&lt;blockquote>
&lt;p>(Page.203)是一种容损策略(damage-cotainment strategy)。&lt;/p>
&lt;/blockquote>
&lt;p>我觉得目的就是为了把错误引起的损失控制在一定范围内。&lt;/p>
&lt;p>书中其它部分谈到了几点关于产品发布和开发过程中，调试代码如何进行权衡。&lt;/p>
&lt;h2 id="第九章伪代码编程过程">第九章－伪代码编程过程&lt;/h2>
&lt;p>其实，我觉得本章没什么特别要说的，因为我觉得伪代码编程属于开发方法学，而且这种方法是作者比较认可的方法，但是不同的项目可能需要不同的方法作开发，不一定所有项目都要用伪代码编程。例如，重构。&lt;/p>
&lt;p>不过，通过了解伪代码编程，然后再跳出整个软件开发的框框，我觉得写代码真成为了软件开发中一个不应该占用很多时间的一个环节。通过编写伪代码，可以把你的思路完全展现出来，作者的观点也很明确，当你什么时候发现伪代码已经无法更改的时候，再开始写真正的代码。由此可见，写真正的代码，在这个开发模式中，占用的比例就非常的小。当然，这么做可以很明显的感觉到，真正写实现代码的时候会比较容易，其实思路和框架都有了，只剩下了代码实现。至此，又让我想到关于复杂度的控制。通过这个环节，可以把代码出错的几率压缩到最低，从这一点来看，其实编写伪代码是一个非常重要的环节，它能有效的控制代码的复杂度。&lt;/p>
&lt;p>至此，第二部分基本上就大概总结了下，其实很多点需要不断的在实践中去尝试，总结写下来只是学的第一步，真正能够融会贯通才算是学到手了，你说是吧&lt;/p></description></item><item><title>用户体验，读书，开始学习 Ruby</title><link>https://ohcoder.com/post/2013/03/11/reading-ruby-study/</link><pubDate>Mon, 11 Mar 2013 00:00:00 +0000</pubDate><guid>https://ohcoder.com/post/2013/03/11/reading-ruby-study/</guid><description>&lt;img src="https://ohcoder.com/post/2013/03/11/reading-ruby-study/title.jpg" alt="Featured image of post 用户体验，读书，开始学习 Ruby" />&lt;p>本周过的很太平，也没什么让人感到躁动的事情。忍不住又看了一遍 &lt;a class="link" href="http://worrydream.com/" target="_blank" rel="noopener"
>Bret Victor&lt;/a> 关于 &lt;a class="link" href="http://v.youku.com/v_show/id_XMzUyOTIyNzg0.html" target="_blank" rel="noopener"
>Inventing on Principle&lt;/a> 的演讲视频。当然了，除了学习，更多是让人膜拜。再一次体验了一把创意的魅力。膜拜之余，也产生了一点儿感悟。&lt;/p>
&lt;p>其实好的用户体验，要能够更自然的顺应人类的行为习惯。比如 Bret 所举的几个例子当中，其实只是很普通的满足了人类的视觉和触觉上的基本需求。我觉得，之所以我们会觉得很震撼，是因为现实当中，我们的实现方式是拧巴的。&lt;/p>
&lt;p>我们常说一句话，叫“看得见，摸得着”。人类天生的外部感觉包括视觉、听觉、嗅觉、味觉和触觉。这五感是人类最基本也是最自然的行为感受。生活中，我们的很多自然行为都是基于这五感展开，因为只有这样才会顺应我们的行为习惯，我们才会觉得更舒服，更容易接受，更自然。比如说，你用手拿起杯子，立刻就会发现杯子的位置移动了，这同时满足了我们的视觉和触觉。用手把墙上的开关关掉，灯立刻就灭了，同样同时满足了触觉和视觉，等等。但为什么当我们第一次看到 Bret 用&lt;!-- raw HTML omitted -->Javascript&lt;!-- raw HTML omitted -->编辑器演示那段程序的时候我们会有一种震撼的感觉呢？&lt;/p>
&lt;p>包括我自己在内，第一次看的时候真的被震撼到了。我想这是由历史原因造成的吧。因为写程序或者说开发软件这件事一开始并不是可见即可得，天长地久我们形成了另一种行为习惯，认为调试程序就应该是点一下编译按钮，然后显示运行结果，我们认为这才是自然的，这种行为已经成为习惯，我们似乎已经忘记最原始也是最自然的做事方式。所以当我们看到这段视频的时候，我们才发现，事情原来可以这样。其实现在理性的想想，事情本来就应该是这样，这才是我们最自然，最本能的行为习惯，是历史的原因把我们最原始或者说是最本能的行为习惯带到了沟里，现在我们只不过是回到正轨而已。&lt;/p>
&lt;p>除了看这段视频之外，本周开始阅读《代码大全(第2版)》，并写了一篇很笼统的&lt;a class="link" href="https://ohcoder.com/post/2013/03/11/reading-ruby-study/" target="_blank" rel="noopener"
>读书笔记&lt;/a>。笔记记录的不是很多，只是摘录了几处目前感触较深的地方，其实书中很多小细节都有感触，这里只是很笼统的随手记下了几点。这种书读一遍恐怕是不行的。需要日后慢慢体会，反复阅读，收获会更多。&lt;/p>
&lt;p>这周开始学 Ruby 语言，看了一天 Ruby，写了几行代码算作入门。以后想深入学习一下 Ruby On Rails。写了几行 Ruby 之后，觉得 Ruby 更适合锻炼抽象思维，能够潜在的引导你更多的关注功能实现，而不用太多的考虑逻辑之外的事情，这让我感到很舒服。我感觉写 Ruby 程序面向的是思维逻辑，而不是机器。以后也可以在 web 上快速实现一点小玩意儿，感觉也不错。&lt;/p>
&lt;p>或许有人会说，想锻炼抽象思维很多语言都可以啊，干嘛找这个借口说学 Ruby。比如 C++ 的模板元编程完全可以满足你的欲望。对此，我只想说一个字，滚粗！&lt;/p></description></item><item><title>读《代码大全（第二版）》笔记（一）</title><link>https://ohcoder.com/post/2013/03/08/reading-code-complete1/</link><pubDate>Fri, 08 Mar 2013 00:00:00 +0000</pubDate><guid>https://ohcoder.com/post/2013/03/08/reading-code-complete1/</guid><description>&lt;img src="https://ohcoder.com/post/2013/03/08/reading-code-complete1/title.jpg" alt="Featured image of post 读《代码大全（第二版）》笔记（一）" />&lt;p>这周开始读《&lt;a class="link" href="http://book.douban.com/subject/1477390/" target="_blank" rel="noopener"
>代码大全(第二版)&lt;/a>》，没什么特别的原因，只是希望能开阔一下眼界，增加一下见识，丰富一下自己内在的知识。面对当前纷乱的技术分支，沉下心来读一读经典的著作，或许可以从中可以找到一些答案。打算每一周看一部分，看了一下目录，本书一共分为七部分。每周看完一部分就写一篇笔记，粗略记录一下自己的理解。&lt;/p>
&lt;p>其实，本书的经典早已不言而喻，所以其中所讲的内容都很经典。在这里只是记录下自己的理解吧。也许现在看起来理解的很幼稚，不过我觉的，应该会随着时间的不断累加，自己会有更多的感悟吧。所以，凡事都有一个开头，对吧。 ^ _ ^&lt;/p>
&lt;h2 id="从前言说起">从前言说起&lt;/h2>
&lt;p>其实，我看书有一个癖好，每本书基本上我都会从前言开始阅读，总是担心会漏掉什么重要内容似的。这本书也不例外，很幸运，有一段话我体会很深&lt;/p>
&lt;blockquote>
&lt;p>(page.xxii)&amp;hellip;因为学习并掌握不止一门语言通常是专业程序员职业生涯中的分水岭。一旦一名程序员意识到编程原则是超越特定语言语法的东西时，通往能够实质地改善编程质量并提高工作效率地知识大门也就向他敞开了。&lt;/p>
&lt;/blockquote>
&lt;p>回顾了一下自己地学习经历，觉得感受还是蛮深刻的。最早开始的时候我只会 C# 一种语言，那两年思想上基本被束缚在了 Windows 平台上，眼睛里只有 C#，而且编程习惯基本上也被束缚在 Visual Studio 工具上，认为编程就应该用 Visual Studio，编程和 VS(Visual Studio)工具绑定到了一起，离开了 VS 工具基本就不会写程序了。我觉得这并不好笑，而且相信很多 Windows 平台的同学还是有这种想法的吧。&lt;/p>
&lt;p>很幸运，三年前有幸接触 C++，算是迈出了只会一门语言这个圈子。不管是从心理上还是技术上都算是往前迈出了一步。自从去年开始使用 Mac，之后不断接触 Linux 相关，之后逐渐逃离 Windows 世界，随后接触了一些新的语言比如面向前端的 &lt;!-- raw HTML omitted -->Dart&lt;!-- raw HTML omitted -->语言，当前侧重于服务器端的&lt;!-- raw HTML omitted -->Golang&lt;!-- raw HTML omitted -->语言，古老的&lt;!-- raw HTML omitted -->Lisp&lt;!-- raw HTML omitted -->语言，年轻的&lt;!-- raw HTML omitted -->Ruby&lt;!-- raw HTML omitted -->语言，当然还有 iOS 开发常用的&lt;!-- raw HTML omitted -->Objective C&lt;!-- raw HTML omitted -->等等。回想了一下，现在基本突破了面对新语言的恐惧感。了解这些语言的过程中除了学习具体的语法以外，也让我逐渐意识到，写程序，其实只要一个好的文本编辑器(例如&lt;!-- raw HTML omitted -->Vim&lt;!-- raw HTML omitted -->或 &lt;a class="link" href="https://github.com/textmate/textmate" target="_blank" rel="noopener"
>Textmate&lt;/a>) 和相应的编译器就可以了。不需要安装一个臃肿而且庞大的图形界面工具。其实想想，编程语言和人类语言统称为语言，只不过一个是面向人的，一个是面向计算机的而已(注：这里面向计算机指的是让计算机执行的角度说的，而不是从让人阅读的角度说的。当然了，写程序当然是让人能够更好的阅读。但前提是计算机得能运行，你说是不？)。多接触一些语言还有一个很好的感受是，当大牛们对一门语言评头论足的时候，你多少也可以产生一点点理性的切身能够体会到的想法(共鸣或反对) ^ _ ^，而不是盲目且木纳的对着大牛们不断的点头(例如某大牛说 VS 工具是反人类的，至少你可以理解他的吐槽点在哪里)。&lt;/p>
&lt;h2 id="第一章欢迎进入软件构建的世界">第一章－欢迎进入软件构建的世界&lt;/h2>
&lt;p>作者一开始列了一个构建软件的步骤清单，随后否定了这个按部就班的固定的步骤，并称其为红头文件。并解释说&lt;/p>
&lt;blockquote>
&lt;p>(page.4) 在不太正规和正规之间找一个平衡点是不容易的……&lt;/p>
&lt;/blockquote>
&lt;p>我想凡是参与过公司项目的同学多少都可以理解其中的意思y( ^ _ ^ )y。随后强调了软件构建的重要性。&lt;/p>
&lt;h2 id="第二章用隐喻来更充分地理解软件开发">第二章－用隐喻来更充分地理解软件开发&lt;/h2>
&lt;p>看此处之前我是隐隐约约有一种感觉的，但是我不知道应该如何表达。作者用这样一段话比喻软件隐喻像是什么&lt;/p>
&lt;blockquote>
&lt;p>(page.11) 与其说一个软件隐喻像是一张路线图，还不如说它是一盏探照灯。它不会告诉你到哪里去寻找答案，而仅仅是告诉你如何去寻找答案。隐喻的作用更像是启示(heuristic,启发、试探法)，而不是算法(algorithm)。&lt;/p>
&lt;/blockquote>
&lt;p>恰好昨天晚上看到一篇关于&lt;a class="link" href="http://www.cnblogs.com/weidagang2046/archive/2013/02/15/on-interview.html" target="_blank" rel="noopener"
>程序员招聘&lt;/a>的文章，我很赞同文章里的招聘观点。而且我也觉得，通常情况下，决定一款软件是否成功的主要因素并不是某个牛掰的算法。书中的隐喻，我自己的理解是在构建软件过程中对软件的一种需求上的感悟，是非理性的，恰好和算法这种理性思维形成互补，就像阴阳八卦图中的黑白两部分共同构成一个圆一样。不过，我隐约觉得，构建软件过程中隐喻的重要性要高于个别具体算法。&lt;/p>
&lt;p>之后作者针对于软件过程中的隐喻给出了几种不同类型的软件隐喻。我觉得软件的隐喻很耐人寻味，因为它同样突破了固有的计算机领域，同样可以扩展到世间万物，上升到方法论的高度。&lt;/p>
&lt;h2 id="第三章三思而后行前期准备">第三章－三思而后行：前期准备&lt;/h2>
&lt;p>本章主要讲述了构建软件的前期准备工作。针对不同的软件类型，采取不同的准备策略，例如遇到什么样的客户需要制定哪些策略。并用实际的科学数据表明如果前期准备不够充分会由于软件的进度的不同所遭受的损失比例。总之一句话，前期准备是重中之重，并举例说明了软件开发的不同阶段对前期准备会产生哪些影响。我觉得，这些可以起到指导作用，需要很强的实际操作经验才能驾驭或者说熟练的运用，并不是另一个红头文件。之后描述了架构包括哪些具体的内容，需要考虑哪些方面。觉得很多还是需要不断的实践才能深刻的理解其中的意味，单看这些罗列的文字没什么太大的意义。&lt;/p>
&lt;h2 id="第四章关键的构建决策">第四章－关键的“构建”决策&lt;/h2>
&lt;p>这一章主要是构建过程中，编程语言的选择问题。并介绍了几种常见的语言都有哪些特点。书中有一句话让我不太认同&lt;/p>
&lt;blockquote>
&lt;p>(page.66~page.67) &amp;hellip;，我还看到了 Web 的崛起和 Windows 的衰落。我只能假设当你读到这本书的时候，又会有某些新的技术蒸蒸日上，而我今天(2004年)所知道的 Web 编程将会慢慢消失。这些技术周期(或者说是技术浪潮)意味着不同的编程实践，编程实践取决于你在技术浪潮所处的位置。&lt;/p>
&lt;/blockquote>
&lt;p>很显然，目前来看(2013年) Web 编程不会消失，而且还会有成为主流的可能。说说我的想法，对于未来移动端会被 Web 取代的这种说法我也不敢完全认同。我认为未来会是移动终端的 UI 加上 Web 的后端会成为主流(或者说是云端？)，因为我认为 Web 的 &lt;!-- raw HTML omitted -->URL&lt;!-- raw HTML omitted --> 对于普通大众来说是使用 Web 的一个门槛，远远没有移动端的 UI 更友好。当然了，我也像作者一样给自己留条后路，我只能假设当你读到此篇博客的时候，又会有某些新的技术蒸蒸日上，而我今天(2013年)所知道的 Web 的 &lt;!-- raw HTML omitted -->URL&lt;!-- raw HTML omitted --> 会慢慢退化。&lt;/p>
&lt;p>至于书中的语言介绍，我就不总结了，以免招致“杀身之祸”。但作者的一个观点，我觉得非常有启发。引用书中的解释&lt;/p>
&lt;blockquote>
&lt;p>(page.68) gries对“在一种语言上编程(programming in a language)”和“深入一种语言去编程(programming into a language)”做了区分。“在一种语言上编程”的程序员将他们的思想限制于“语言直接支持的那些构件”。如果语言工具是初级的，那么程序员的思想也是初级的。“深入一种语言去编程”的程序员首先决定他要表达的思想是什么，然后决定如何使用特定语言提供的工具来表达这些思想&lt;/p>
&lt;/blockquote>
&lt;p>其实，我的理解是，要让语言为你的思想服务，而不要让你的思想服务于语言。&lt;/p></description></item><item><title>2013年3月3日</title><link>https://ohcoder.com/post/2013/03/03/2013-03-03/</link><pubDate>Sun, 03 Mar 2013 00:00:00 +0000</pubDate><guid>https://ohcoder.com/post/2013/03/03/2013-03-03/</guid><description>&lt;img src="https://ohcoder.com/post/2013/03/03/2013-03-03/title.jpg" alt="Featured image of post 2013年3月3日" />&lt;p>这个礼拜感觉过的挺长的，不知道哪儿来的这种感觉，反正感觉挺长的。&lt;/p>
&lt;p>可能是因为前两天身体不太舒服吧。说来也奇怪，前两天突然感觉后背中间的脊柱特别痛，尤其是上半身左右转的时候特别明显，抱着怕死的心态，礼拜四那天还是去朝阳医院检查了一下。到了之后照了两张相，医生看了看骨头没啥问题，走的时候拿了两盒药，来回折腾了我多半天时间。其实如果刨去排队时间整个过程不超过四十分钟，竟花了我三百大洋，真 ™ 是抢劫啊 (￣▽￣)！贫下中农看个病容易吗？&lt;/p>
&lt;p>这个礼拜开始做东西了，貌似嚷嚷了好久了，老实说一直都没付诸于行动，受过年影响拖延了好久。前两天在自己的 VPS 上建立了 Git 仓库，用 XCode 自带的 Git 版本管理功能直接推送到 VPS 上。后来从 Jay 同学那了解到 &lt;a class="link" href="http://bitbucket.org/" target="_blank" rel="noopener"
>bitbucket&lt;/a> 可以建立私有工程，并强烈推荐了 SourceTree 代码管理工具。想了想，干脆建立两个库吧。一方面放到 bitbucket 上可以保证代码不会丢失，另一方面当初选择直接放到自己的 VPS 上其实是想更直接的学习一下 Git，毕竟自己真正动手做过之后学到的知识印象更深刻，而且还可以对 XCode 自带的 Git 管理工具有一个了解。&lt;/p>
&lt;p>iOS 学习方面现阶段没啥好说的，很多不明白的地方基本上文档写的都比较明白，关键还是看你能不能踏下心来硬着头皮啃英语了。英语不好的同学桑不起啊！&lt;/p>
&lt;p>另外，这里需要特别感谢一位网友，指出了很多 Box2d 教程中翻译错误或不恰当的地方，在此表示感谢，也希望大家如果发现觉得翻译不清晰或错误的地方不吝指出，我会积极改正，目的只是希望能够让更多的朋友更好的学习。&lt;/p>
&lt;p>关于 Box2d，如果有空的话，我也想在页面上用 Box2dweb 尝试学习做点小 demo，供娱乐。不过感觉现在时间有限，不知道能不能挤出时间，毕竟过年将近一个月的时间基本上就没干什么正经事儿，也没写什么代码，说实话手都有点生了，感觉几天不写代码好像就不会写了似的，可能还是写的少的原因吧。打字这项运动感觉也和体育锻炼一样，长时间手指头不活动，感觉手指关节就不灵活了。&lt;/p>
&lt;p>另外，小改了一下博客右边的简介，添加了我在 Twitter 上截至到上个月的时候发的所有 tweets。那些页面文件放到了我的 VPS 上，所以墙内的朋友应该也可以打开。当然内容只是截至到上个月中旬的，之后发布的内容是没有的。去除了之前右下方的 Twitter 帐户模块，现在墙内的朋友刷新页面应该会清爽很多，标签页上不会长时间有更新状态提示了。Tweets 下面添加了我的 gmail 邮箱，为了防止接收垃圾邮件，放了一张图片。平时不用 QQ，有用 gtalk 的朋友，可以加我，平时可以线上 YY。在页面的右下方保留了 Google plus，因为这只是一个连接，没有加载 Google plus 相关的内容，所以页面刷新不受影响，所以用 Google plus 的朋友还是可以互圈一下滴！&lt;/p>
&lt;p>坚持每个星期至少写一篇日志不到两个月的时间，码点儿字感觉不是一件特别难的事情。记得当初上中小学的时候，记忆中是每个礼拜四有两节作文课，作文课上要求写一篇作文，下课交给语文老师。总感觉那个时候码点儿字跟要了亲命似的，每次都是第二节课才开始写，有时候写了个开头又觉得不对，撕了又重写，很多次貌似都是还有 30 分钟要下课的时候，突然有一种壮士一去不复返的悲壮感，然后按照老师出的题目，梦幻般的挤出差不多 400 个字。记忆最深刻的是，差不多如果哪次提前个十分二十分钟写完了，总要数一数写了多少字，如果写的不够，还得硬着头皮，啰里八嗦的胡乱加上几句无关痛痒的话，直到凑够 400 个字为止。有时候神奇般的写了 420 个字，还会有一种胜利的喜悦感，至于作文的质量，那是全然不顾的，总觉得那应该是老师应该操心的事情。&lt;/p>
&lt;p>哦，对了，这个礼拜看了三部电影。当然是孤独的一个人窝在电脑前看的。一部是《&lt;a class="link" href="http://movie.douban.com/subject/1929463/" target="_blank" rel="noopener"
>Life of Pi&lt;/a>》，另一部是《&lt;a class="link" href="http://movie.douban.com/subject/10574622/" target="_blank" rel="noopener"
>人再囧途之泰囧&lt;/a>》，还有一部是《&lt;a class="link" href="http://movie.douban.com/subject/3530403/" target="_blank" rel="noopener"
>云图&lt;/a>》。除了《人再囧途之泰囧》没什么深度以外，其余两部片子对人性的揭露还是很耐人寻味的，感觉都没怎么看懂，尤其是《云图》，也不能全怪我，找了一个坑爹的翻译字幕，&lt;/p>
&lt;p>&lt;img src="https://ohcoder.com/post/2013/03/03/2013-03-03/2013_02_27.jpg"
width="1277"
height="798"
srcset="https://ohcoder.com/post/2013/03/03/2013-03-03/2013_02_27_hu4362511d63826b0b180663fd1053820a_735756_480x0_resize_q75_box.jpg 480w, https://ohcoder.com/post/2013/03/03/2013-03-03/2013_02_27_hu4362511d63826b0b180663fd1053820a_735756_1024x0_resize_q75_box.jpg 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="160"
data-flex-basis="384px"
>&lt;/p>
&lt;p>害的我看的迷迷糊糊的，这能全怪我吗？以后有时间了必须还得再看一遍。&lt;/p></description></item><item><title>2013年2月24日</title><link>https://ohcoder.com/post/2013/02/24/2013-02-24/</link><pubDate>Sun, 24 Feb 2013 00:00:00 +0000</pubDate><guid>https://ohcoder.com/post/2013/02/24/2013-02-24/</guid><description>&lt;img src="https://ohcoder.com/post/2013/02/24/2013-02-24/title.jpg" alt="Featured image of post 2013年2月24日" />&lt;p>本周已回京。年假也正式画上句号，一切又将进入正轨。&lt;/p>
&lt;p>按照计划，这周拜访了高三班主任。还是八年前毕业的那一年过年的时候去过他家，这么多年，也没什么大变化，没搬家，模样也没变化多少，倒是官职大了一级，可喜可贺。在他眼里，我想我的变化应该还是蛮大的，变化大也是正常的，因为这段时期是从学校走向社会的转变时期，我想重点不是变化到底有多大，而是我的变化轨道偏离了他的预期。&lt;/p>
&lt;p>如果他有这样的感觉，我觉得也没什么好奇怪的，因为现在的我不但出乎了他料想的预定轨道，连身边一起长大的朋友也没有预料到。其实连我自己也不曾想到。呵呵，这么说好像是在自我吹牛b，其实不是这个意思啦，不要想偏了。在他眼里，我的预定轨道应该是这两年刚刚研究生毕业的样子，即便回去见面聊天，话题多半儿应该也是校园里的一些事情，或者是初入社会的一些疑问和好奇，又或者是抱怨社会不公平，为什么自己的老爸不是国家主席。&lt;/p>
&lt;p>其实，年前当我第一次拨通他的电话，说我工作几年了，过年想回去看望他时，他第一句就问，“你没有考研究生吗？”。其实听到这句话的短暂一刻，心情突然有点复杂。&lt;/p>
&lt;p>这几年，老师家也没什么变化，沙发还是八年前的沙发，记忆中只不过这次他和我坐的位置互换了一下而已。但是聊天的内容却完全不一样了。我粗略聊了一下这几年的经历，由于这些经历改变了自己的一些想法，其中包括放弃考研究生。侧面也解释了一下高中毕业之后为什么做了一些让周围同学感到费解的事情，时隔几年之后我终于有勇气说出了其中的原因。以后若有同学和老师聊起来，也算是给出了一个理由。其实那几年，包括毕业之后的那两年思想一直都很偏激，那个时候完全没有独立的思想，也没有形成自己的价值观。对身边很多事情都是以一种敌对的态度对待。那两年完全脱离了中学的圈子(所以人人网我是从来不去的:P ，后来才知道几乎完全是照抄Facebook，所以我更不会去了，纯粹是歪打正着，:D)，生活过的也很封闭，几乎完全活在自己的世界里。&lt;/p>
&lt;p>我们虽然聊了很多，但是还是有很多事情没有说出来。谈话的气场告诉我，即便说出来，也不会产生共鸣，有些事情如果没有经历过，是体会不到的，说出来反而会显得很假。对于刚毕业那两年的经历，说实话，身边能被理解的朋友我猜不会超过一、两个。我从毕业的那两年经历的事情当中学会了很多。除了逐渐了解自己以外，也在不断真正的了解社会，包括各个阶层的老百姓，这些是学校里很难学到的，和学位高低无关。&lt;/p>
&lt;p>过年期间和一位初中同学开玩笑说，我这几年的经历可以写一部小说了，哈哈。其实回过头想想，要是真写一部小说，我觉得要比《&lt;a class="link" href="http://book.douban.com/subject/3267945/" target="_blank" rel="noopener"
>疯狂的程序员&lt;/a>》曲折的多，故事绝对跌宕起伏，呵呵。&lt;/p>
&lt;p>其实，现在越来越觉得，自己经历的事情别人理解与否并不重要，重要的是从这些经历的事情当中悟出的一些道理，对于以后能够帮助自己走的更远才是最重要的。毕竟，生活是自己的，闲话是别人的。&lt;/p>
&lt;p>我觉得生活的感悟是书本上很难学到的，和学校无关，和学位也无关。&lt;/p>
&lt;p>聊天的过程中，我提到了高考的一个弊端，我不确定这算不算也是一种洗脑，很多同学因为那一次的考试，由于没有考上心里预期的学校，从此潜意识里做了自我定位，认为自己不如某某牛b学校的学生，从此心里就烙上了这个烙印。我见过很多同学从此不再努力学习，年纪轻轻就产生了一种宿命论，不知道这种心态抹杀了多少曾经有理想有抱负的同学。但对于统治阶级来说是它们所希望看到的，再顺着说下去我就踩红线了，你懂得。&lt;/p>
&lt;p>话题扯的有点远，主要还是上学那档子事情吧。对于我自己曾经经历的那点破事儿，我想我是不会再提了，我不想成为一个祥林叔，再说谁还没经历点儿事情么。我准备以后留着当“励志”故事骗mm用，哈哈。话说如果有一天我能财务自由，激情来了我也写一本书，名字就叫《更疯狂的程序员》，哈哈！&lt;/p>
&lt;p>本周学习方面，修订了几篇 Box2D 的翻译教程。突然想，同时用 box2dweb 类库在博客页面上做一些好玩的小例子也不错。学习其他方面也没什么好说的，按部就班学习就是了。回头看了下，去年大概百分之六十的时间基本上都用在对移动互联网行业的了解上面了，对于纯粹的技术学习并不深入，今年没什么好说的了，学吧。&lt;/p></description></item><item><title>2013年02月17日</title><link>https://ohcoder.com/post/2013/02/17/2013-02-17/</link><pubDate>Sun, 17 Feb 2013 00:00:00 +0000</pubDate><guid>https://ohcoder.com/post/2013/02/17/2013-02-17/</guid><description>&lt;img src="https://ohcoder.com/post/2013/02/17/2013-02-17/title.jpg" alt="Featured image of post 2013年02月17日" />&lt;p>本来以为这个礼拜没什么事情了，没想到又冒出很多事情，外加这几天鼻炎又闹起来了，喝了几天鼻炎康，喝过这种药的同学都知道喝完以后会犯困，药里面貌似含有让人睡眠的成份。不过现在想来，这个礼拜有事情也没什么奇怪的。过年嘛，当然会有过年应该有的事情。除了给手机上的同学和朋友拜年以外，今年还给 GTalk 上的朋友们拜了年，特别是仅有的两位美女，:D。&lt;/p>
&lt;p>这个礼拜把关于 OpenGL ES 的那本书算是翻过一遍了吧。另外，把之前翻译的 &lt;a class="link" href="https://web.archive.org/web/20190414143148/http://ohcoder.com/blog/2013/02/18/diary/" target="_blank" rel="noopener"
>Box2D C++教程&lt;/a>（注：原链接已失效，此处为 WebArchive 链接） 相关的文章重新修订了一部分，大概不到一半儿的样子(十几篇文章？)。打算接下来的这个礼拜把剩下的教程全部修订一遍。果然不出我所料，修订过程中改了多处蹩脚的词汇，还有几处不准确的以及错误的翻译。当然了，我觉得如果再过一段时间反过头来再看这些教程，应该还会发现翻译的不合适的地方，慢慢完善吧。除了看书和翻译以外，无聊的时候在脑海中幻想了一下 app 的 UI 大概长什么样子。&lt;/p>
&lt;p>关于过年的活动，大年初一去奶奶家。领着表弟表妹一起玩牌，又当了一回孩子头儿。说实话，好久不玩牌了，还是蛮有新鲜感的，并且还是和小大人们一起玩，哈哈。&lt;/p>
&lt;p>初二干什么去了？哦，今年初二有点儿特别，那天在家看了一天线性代数，哈哈。耳朵里塞上耳机，打开豆瓣FM，摊开数学课本。理性与感性交织在一起，身处感性的世界，感受理性思维，有意境吧，呵呵。坦白说其实就为了防止外界干扰而已，哈哈。&lt;/p>
&lt;p>接下来意外碰到了初中的两位同学，又意外遇到一件棘手的问题。事实证明，本人确实不善于此事情，:P。&lt;/p>
&lt;p>昨天突发好奇心，想知道这两年在虾米网上总共听了多少首歌曲。打开一看，已经累计听歌一万多首歌，说实话还是有点儿小意外。虾米网帐号注册有两年多了，不过这半年基本都没怎么听过。除了虾米网以外，豆瓣FM上已经累计听歌1500多首歌，还有 &lt;a class="link" href="http://jing.fm/" target="_blank" rel="noopener"
>jing.fm&lt;/a>（注：原链接已失效） 以及一些国外的网站偶尔也会去。另外，我线下听歌时间也是蛮长的。事实证明，音乐已经不知不觉成为我生活的一部分。粗略想了一下，脑海中第一个闪现的音乐类型是西方古典音乐，其次是钢琴、小提琴以及一些民族乐器演奏的音乐，还有日本动漫。不管怎么说，听了这么多音乐总算是找到了自己比较喜欢的音乐类型，也算是没有白听，呵呵。&lt;/p>
&lt;p>从这一万多首音乐也可以看出，如果真的很喜欢某一件事情，日积月累，不知不觉中会产生让你意想不到的结果。对于自己喜欢做的事情，付出是一种享受。&lt;/p></description></item><item><title>2013年2月10日</title><link>https://ohcoder.com/post/2013/02/10/2013-02-10/</link><pubDate>Sun, 10 Feb 2013 00:00:00 +0000</pubDate><guid>https://ohcoder.com/post/2013/02/10/2013-02-10/</guid><description>&lt;img src="https://ohcoder.com/post/2013/02/10/2013-02-10/title.jpg" alt="Featured image of post 2013年2月10日" />&lt;p>这个礼拜学习方面进展缓慢，老实说没有达到自己的预期，对自己这一周的表现有些失望。如果非要找理由，我想可以随便找到很多，比如陪家人逛街，帮家里做了些事情，受周围环境影响等等。可是我不想给自己找这些看似理由的理由，毫无实际意义。&lt;/p>
&lt;p>当然，也不是一点进展都没有，只是进展很慢，远远没有达到自己的预期。具体来说那本居余马编著的《线性代数》看了大概三分之一的样子，&lt;a class="link" href="https://book.douban.com/subject/1231141/" target="_blank" rel="noopener"
>《实时计算机图形学(第二版)》&lt;/a>看了不到三分之一，&lt;a class="link" href="https://book.douban.com/subject/3175883/" target="_blank" rel="noopener"
>《OpenGL ES 2.0 Programming Guide》&lt;/a>还剩几章没看完。&lt;/p>
&lt;p>接下来我想应该没有什么乱七八糟的事情了，觉得不能再这么低效了。无论如何都要加快进度了。看表现吧，多说无用。另外，有一件意外的事情，有一位华人朋友开始依据我翻译的Box2D教程做一系列视频教程，现在已经录完&lt;a class="link" href="http://www.bilibili.tv/video/av460661/" target="_blank" rel="noopener"
>第一集&lt;/a>。话说回来，有时间我应该再重新修订一遍，我想现在反过头来再看一定可以找到一些当初翻译不太恰当的地方。在此也感谢那位朋友的分享精神。&lt;/p>
&lt;p>这个礼拜除了帮家人做了些力所能及的事情，买了一些过年吃的年货。另外，买了一双新鞋，前些天买的那双鞋最后还是不能穿，所以又去逛街买了一双鞋。昨天出去买了几挂鞭炮，虽然我已经好几年不放炮了，都是我爸放，我对放炮早已没有新鲜感了，只是因为我爸说放炮才有过年的气氛。&lt;/p>
&lt;p>昨天和几个朋友一起去吃火锅，大家都是发小，而且不管怎么说，这份情谊不容易，大家都很珍惜。但是我有一种预感，我不知道再过几年，大家还能不能象以前一样可以无话不谈，但是不管这个地球如何变化，别人我不知道，我想我会，前提是他想知道我是怎么想的，并且直接来问我。因为坦诚是我对待朋友最看重的因素之一，我鄙视装B的人。&lt;/p>
&lt;p>本来对于结婚过日子这档子事情我是没有资格谈论的，因为本人不但没有结婚，连个女朋友都没有，:D。但是举着言论自由的大旗，我还是想说说自己的一些愚见，也许有些朋友看起来会觉得可笑或者幼稚，但对于我来说无所谓，因为我还有机会改正 :P。&lt;/p>
&lt;p>我一直把婚姻看成是一件很神圣的事情，因为她代表了两个人天长地久的爱情。而且我始终认为爱情的基础是对彼此的信任，而信任来自于彼此的了解。很多人把婚姻看成是人生阶段的一个任务，为了完成这个任务必须在特定的时间找那么一个人，不管这个人合适不合适。还有的人把婚姻仅仅看成是一桩买卖，说成买卖好像有点过份，其实我觉得本质上就是一桩买卖，只不过被婚姻这个带有感情色彩的名词遮盖住罢了。比如男(女)方有什么条件，结婚之后能带给对方什么好处，好处有财富方面，也有其它方面。本来是由爱情导向的婚姻，却被赤裸裸的当成是金钱交易。假设有一天觉得这桩买卖不划算了，不知道是不是也会是分道扬镳的时候。&lt;/p>
&lt;p>另外，我觉得爱情其实是一件奢侈品，是可望而不可求的事情，就像朋友关系一样。维系爱情关系的基础依然是奉献，而不是索取。人类的天性中有奉献的一面，现在的社交网站可以更好的证明这一点。大家会分享很多信息在上面，从另一方面来说，这就是一种奉献精神。既然维系爱情关系的基础是奉献，如果双方都能少一点索取而多一些奉献，我想爱情会是甜蜜的。维系婚姻我觉得也是如此，多一些彼此的奉献，少一些彼此的索取，生活的幸福感会高很多。&lt;/p>
&lt;p>我认为生命的过程就像是一个单向的圆环，只不过这个圆环有起点，也有终点。婚姻能够可以帮助我们各自走完各自的圆环。看好了，仅仅是帮助。话又饶回来了，我认为在这个过程中对婚姻起决定性作用的是信任，维系婚姻的是奉献。奉献的内容包括很多，有包容，有理解，有鼓励，有建议等等吧。想想很多感情纠纷大部分都是各自太自私的原因所致，少了一些彼此的奉献。要么就是因为潜意识里觉得这桩买卖不划算所致，衍生出各种抱怨，本质上只是觉得这桩买卖做赔了而已，只不过被感情的表面假象所遮掩住罢了。&lt;/p>
&lt;p>所以，我觉得，爱情就是爱情，买卖就是买卖，最好还是不要用做买卖的手段来经营爱情，我认为这是不靠谱的。&lt;/p>
&lt;p>今天简单说了一些感情方面的观点，老实说自己也感到很意外，像我这种腼腆内向的同学也会向外袒露感情观点，确实感到有些意外。说这些的原因，可能是因为看到身边发生的一些真实的生活片段，产生了一些不一样的想法吧。&lt;/p>
&lt;p>最后我还想说一句，爱情是无价的，能用金钱买到的都不是真正的爱情，也许用钱买到的爱情会走入婚姻，也许这段婚姻还可以伴随你走到终点，但我相信，维系这段婚姻的绝对不是爱情，而是感情。&lt;/p>
&lt;p>但现实社会有时候让我们看不清。遗憾也是生命的一部分，没有遗憾的人生是不完整的，:) 。&lt;/p>
&lt;p>今天装了一下文艺青年，脱离了码农的轨道，惭愧惭愧。&lt;/p></description></item><item><title>2013年2月4日</title><link>https://ohcoder.com/post/2013/02/04/2013-02-04/</link><pubDate>Mon, 04 Feb 2013 00:00:00 +0000</pubDate><guid>https://ohcoder.com/post/2013/02/04/2013-02-04/</guid><description>&lt;img src="https://ohcoder.com/post/2013/02/04/2013-02-04/title.jpg" alt="Featured image of post 2013年2月4日" />&lt;p>因为这个礼拜回家，说实话打乱了一些原有的计划，不过计划被打乱也在我的意料之中，并没有感到特别的焦躁不安。&lt;/p>
&lt;p>虽然我自己对于过年早已没什么新鲜感。但是不管怎么说，过年是一年之中和家里人相聚时间最长的假期，基于感情因素，我还是希望能够多陪一陪父母，还是希望不要因为自己的个人癖好而影响他们。所以更多个人的时间，我只能安排到晚上等他们睡觉之后才开始折腾自己的事情，白天尽量多陪他们，虽然这几天睡眠有些不足，但是心里却很满足，我不确定这算不算是一种幸福。&lt;/p>
&lt;p>学习方面，这个礼拜把《&lt;a class="link" href="http://book.douban.com/subject/3175883/" target="_blank" rel="noopener"
>OpenGL ES 2.0 Programming Guide&lt;/a>》英文版看了一多半儿。另外，开始看《&lt;a class="link" href="http://book.douban.com/subject/1231141/" target="_blank" rel="noopener"
>实时计算机图形学(第二版)&lt;/a>》，虽然现在已经有第三版，不过大部分基础知识还是相通的。其实，这本书早就买了，一直没有花时间好好看，想了想还是先把手头资料看完吧，都是基础知识，能差多少呢？上学时候学的高等数学现在基本也都还给老师了，好多基本概念都模糊不清了，为了能够学的扎实，开始从线性代数补起，开始翻阅居余马编写的《&lt;a class="link" href="http://book.douban.com/subject/1231947/" target="_blank" rel="noopener"
>线性代数(第二版)&lt;/a>》，当初学习的时候记得用的是同济大学版本的教材，居余马编写的这个版本在图书馆里翻过几页，觉得讲的还是不错的，但是忘记当初为什么没有坚持看完了(莫非是因为比同济大学版本讲的内容多？？:D)。看来又应了那句老话，“出来混总是要还的。”&lt;/p>
&lt;p>这几天，白天的时候经常和家里人出去转转。陪着我爸去买了一辆电动三轮车，这样他以后出门的时候方便了很多。即便下雪闹天，安全系数也增加了不少。听我爸说，现在国内电动三轮车很多都是贴牌组装的。我们在市场上逛了一个上午，实际情况基本也验证了他说的那句话，最后挑了一辆相对还算看的过去的车子。&lt;/p>
&lt;p>今天上午，我们家买了一台电视。哈哈，这两天，我们家大采购！！原本计划买一台网络电视，然后通过网络看电视，就不用去装坑爹的有线电视机顶盒了。虽说我们家的网络标榜是八兆带宽，看看视频应该是小 case，但是考虑到平时我不在家，万一家里的宽带出点什么问题，电视就会受影响，对于他们来说，还是有些不方便。而且，他们对于电视也没什么特别挑剔的要求，所以网络这个功能对于他们来说基本就没什么实用价值，合计了一下最后买了一台普通的液晶电视，随后到市场上买了一个卫星接收器。晚上的时候我给装上了，电视看起来还不错，能接收不少电视台。据说之前广电总局每年都会对视频加密方式进行更换，所以每年都要找卖家进行解密，解密一次20块钱。这两年广电总局不知道是不是因为安装的用户太多了，还是说卖家总能进行解密，管也管不住了，反正现在广电总局每年也不对加密方式进行更换了，所以现在这 20 块钱也省了。&lt;/p>
&lt;p>除此之外，这次回家我从北京牛街买了一些纯正的回民年货(注：本人是汉族，只是对这些糕点感兴趣而已，:D)，主要是一些糕点。前些天找到了高中班主任的联系电话，让我惊讶的是，班主任竟然能够记得我！看来学习差到一定程度也能让人印象深刻(其实我觉得有时候臭名昭著和名垂青史有异曲同工之处)。回头想想高中的很多记忆还停留在八、九年前的样子，所以想这次回家拜访一下。本来打算给班主任送一份儿，由于这些糕点不容易储存，计划回来的第二天就去拜访，没考虑到年前老师们等学生放假之后还会忙一阵子，所以最后还是没有送成，有些小遗憾。不过我倒是觉得有时候人情比物重要(哈哈，我倒是挺会为自己解脱啊～)。&lt;/p>
&lt;p>这几天花了很多时间陪家里人，我不觉得有什么不妥的地方，反而我觉得这应该是生活的一部分，也许去年我不会有这种想法，但我不太确定为什么今年我会突然有这种想法。我想下一步我需要做的是尽量少睡两个小时，然后提高晚上的学习效率，在保证不影响家人沟通的情况下，更多利用白天零散的时间去思考自己的事情，如果有整块儿时间而又不会影响家人当然更好 :)。&lt;/p></description></item><item><title>2013年1月27日</title><link>https://ohcoder.com/post/2013/01/27/2013-01-27/</link><pubDate>Sun, 27 Jan 2013 00:00:00 +0000</pubDate><guid>https://ohcoder.com/post/2013/01/27/2013-01-27/</guid><description>&lt;img src="https://ohcoder.com/post/2013/01/27/2013-01-27/title.jpg" alt="Featured image of post 2013年1月27日" />&lt;p>过去的一个礼拜总体来说还算是充实，虽然我认为还可以更高效。&lt;/p>
&lt;p>学习方面，读过两本书，一本是《&lt;a class="link" href="http://book.douban.com/subject/20471120/" target="_blank" rel="noopener"
>打造Facebook&lt;/a>》，另一本是《&lt;a class="link" href="http://book.douban.com/subject/3852290/" target="_blank" rel="noopener"
>现代操作系统&lt;/a>》。对于第一本书，用了多半天的时间一口气读完了，很痛快，简单写了一篇&lt;a class="link" href="https://ohcoder.com/post/2013/01/20/building-facebook/" target="_blank" rel="noopener"
>读后感&lt;/a>）。第二本书说实话还没有读完，进度有些慢，不过也无所谓，看这种书质量还是最重要的。&lt;/p>
&lt;p>看操作系统的书还是好几年前的事情，现在再次看对很多基本概念又有了新的理解，对已经忘记的基础知识做了巩固。我觉得，对于这些基础知识花些时间是值得的，因为这些知识很多不是仅仅看一遍书就可以马上理解的，需要不断的实践，不断的感悟，才能把其中一点一滴的理解渗透在你所写的代码中。这些基本功的训练表面上看没有那么炫，而且也不能立竿见影，但却决定了你未来对代码理解的高度。&lt;/p>
&lt;p>人们总是有很多理由忙于眼前看似很急的事情，却往往忽略掉更重要的事情，而且这些重要的事情往往需要花费大量的时间才能完成。然后，日复一日，年复一年，重要的事情总是提不到日程，不断的被这些不是很重要而又很急的事情所困扰，从而陷入恶性循环当中，疲于应付。&lt;/p>
&lt;p>我觉得上述状态不是一个良性的。这几年也接触了一些不同类型的技术，虽然仅仅从使用角度来讲算是有点经验，但总感觉这不是一个正确提高的路径，因为每当其中一些技术过时之后，你总会有种莫名恐慌的感觉。总体感觉就是被各种花哨的技术拖的疲惫不堪，仿佛有一个天花板挡住了你迅速、准确的看清这些技术的本质。&lt;/p>
&lt;p>说到这，让我想起了另一个话题。现在市面上不是说急需 T 型人才么，我想这种状态可能因为一直在书写笔画 &amp;lsquo;一&amp;rsquo;，而忽略了第二笔 &amp;lsquo;|&amp;rsquo;，下一步我觉得应该好好写第二笔 &amp;lsquo;|&amp;rsquo; 了。&lt;/p>
&lt;p>扯的有点儿远了，呵呵。总而言之，我觉得我应该重新夯实一下基础知识了，然后结合实践不断的理解基础知识，尽可能的根据理论，有理有据的指导代码的编写。话说，磨刀不误砍柴工，开始的时候速度总会有些慢，要有信心和耐心。虽然社会现状非常浮躁，不过这也反衬出踏实肯干的难能可贵，不是吗？&lt;/p>
&lt;p>除了看书以外，看了极客公园关于创新大会高峰访谈的&lt;a class="link" href="http://www.geekpark.net/event/collection/203" target="_blank" rel="noopener"
>视频&lt;/a>（注：原链接已失效），简单说两句，关于开复老师的对话，我觉得对于像我这种个人发展来说，没有什么可借鉴的实际意义，讲的很多内容都是关于方向和未来5年左右的预期判断，从公司的发展角度来看，或许更有指导价值。当然了，你也可以从中借鉴一点，比如下一跳你想跳到哪里:D。关于李彦宏的对话，讲了百度公司的一些文化和应对移动互联网的具体措施，对个人学习基本无用，基本上是在推销百度。由于本人对百度不感冒，在此不做多讨论。关于对话李学凌，我觉得是干货最多的，建议有时间的朋友可以看一下，可以学到一些营销策略的经验，对于寻找你的用户群还是有借鉴的经验的。这哥们一看就是程序员出身，说话很实在，不像那些大佬，整个一个卖鸡汤的。关于对话阿北，虽然我比较喜欢豆瓣，但是鉴于阿北同学说话很快，声音又很低，在下没有能坚持看完（♪───Ｏ（≧∇≦）Ｏ────♪），在此不表。关于对话王小川，基本上一直都在推销搜狗，对个人学习没什么借鉴意义。最后关于对话老施同学，全可以作为 Google 的粉丝瞻仰一下。&lt;/p>
&lt;p>另外，看了关于 RUBE 工具的 &lt;a class="link" href="http://www.youtube.com/watch?v=2gb63dUzA-E" target="_blank" rel="noopener"
>教学视频&lt;/a>，基本掌握了 RUBE 工具的操作，可以创建一些简单的场景。作为回报，为 Chris 发现了一个bug，哈哈。&lt;/p>
&lt;p>在淘宝上买了一双鞋，大小还比较合适，不过不合脚，不知道磨合一下能不能凑合穿，以后还是到实体店试着去买吧，鞋这东西要是不合适就受大罪啦。同学们，切记呀！血淋淋的教训啊～！&lt;/p>
&lt;p>关于 OpenGL ES 的学习，看了看，还是先把手头上的资料看完再说吧，以免贪多嚼不烂。&lt;/p>
&lt;p>最后，今天早上 Twitter 上传来意外的喜讯，心目中 &lt;a class="link" href="http://zh.wikipedia.org/wiki/BOND" target="_blank" rel="noopener"
>Bond乐队&lt;/a> 的一位女神 follow 我啦，哈哈！&lt;/p></description></item><item><title>打造 Facebook</title><link>https://ohcoder.com/post/2013/01/20/building-facebook/</link><pubDate>Sun, 20 Jan 2013 00:00:00 +0000</pubDate><guid>https://ohcoder.com/post/2013/01/20/building-facebook/</guid><description>&lt;img src="https://ohcoder.com/post/2013/01/20/building-facebook/title.jpg" alt="Featured image of post 打造 Facebook" />&lt;p>本来没打算读这本书，碰巧今天上午在&lt;!-- raw HTML omitted -->多看阅读&lt;!-- raw HTML omitted -->上看到有卖电子版，而且比纸质书便宜一半多(12元，纸质书网购要27.5元)，所以就买了下来，然后花了多半天的时间读完了。&lt;/p>
&lt;p>不能免俗，跟看其他牛b公司的传奇故事类似，从老扎的聪明才智说起。&lt;/p>
&lt;p>紧接着作者就不小心闯入facebook，开始了近5年的工作经历。从facebook的“新兵训练营”到黑客文化，此期间无不透露着facebook的工程师文化，给我这个土鳖冲击比较大的几点是：&lt;/p>
&lt;ol>
&lt;li>工程师在facebook非常受尊重。&lt;/li>
&lt;li>管理和技术没有严格的上下级等级观念，只是分工不同，职能不同。&lt;/li>
&lt;li>用生动例子描述了facebook紧张刺激但又很真实的工作生活。&lt;/li>
&lt;li>小团队作战。&lt;/li>
&lt;li>管理方面扁平化，把沟通成本降到最低。&lt;/li>
&lt;li>工程师一般都是超级码农。&lt;/li>
&lt;li>facebook的工作是高度紧张，工作密度很大，当然这也就意味着工程师要有非常强的能力，其中除了技术以外，还要有很好的自我时间管理的能力。&lt;/li>
&lt;li>任何人都可以修改facebook网站，作者还把facebook的网站弄挂了长达半个小时，竟然没有遭受处罚，可见facebook除了内部竞争激烈以外还有包容的一面。&lt;/li>
&lt;li>大团队文化。各个项目组之间不是竞争关系，而是合作关系，此文化避免了很多各个小团队各自为战的心态。&lt;/li>
&lt;/ol>
&lt;p>就列这些吧，列多了就无味了。其实还有很多细节，思想上整体还是蛮受冲击的。&lt;/p>
&lt;p>书的后面主要是作者自己经历的一些事情，包括自己的成长经历，facebook 的招聘流程，产品的发布。关于内部工具这块，facebook非常注重工具的使用，不管是自己开发还是使用开源，亦或是购买第三方，以此来提高工作效率，避免不必要的重复劳动。另外，facebook在产品开始阶段，一般只有几个人，小团队。我比较喜欢这种方式，一来可以降低沟通成本，避免不必要的沟通上产生的误会，二来更加灵活多变。&lt;/p>
&lt;p>另外，纠正一个认识上的误区，现在网上经常有人说“代码胜于雄辩”，给人的感觉好像在说，“别废话，写个代码看看。”其实，在facebook，这句话的意思是相对产品来说的，比如你有一个想法总觉得多么的靠谱，不要讲很多漂亮话，上线看看用户反应再说。所以抛开产品这个前提，“代码胜于雄辩”就有让人误解为“只要实现不求质量”的理解偏差。&lt;/p>
&lt;p>另外一点就是facebook的产品发布一套自有方法，叫做灰度发布(Gated Launch)。基本逻辑就是先让小部分用户使用刚上线的功能作为试水，如果符合预期，然后再逐步放开。&lt;/p>
&lt;p>关于facebook的小团队，我觉得还是蛮牛b的。7、8个人的团队就可以完成非常大的产品。作者说facebook每个工程师都可以抗几百万的用户，太牛b了。&lt;/p>
&lt;p>书的最后部分作者借助此书也谈论了一下自己在国内开始做天使投资的看法和投资方向。其中包括了对中国国内创业公司氛围面临的问题做了概括。&lt;/p>
&lt;p>书的最后，我很佩服作者关于破坏性创新在中国推行的勇气。比如他谈到自己投资的“宝宝拍拍”这样一个产品，他说如果做成了这个也是比较小的公司，但是却会改变很多年轻父母与孩子的成长方式。这种所谓的破坏性创新，不用改变每个人的生活，只让某一类人的生活变得更加顺畅，能做成这样的事情不就非常开心吗？&lt;/p>
&lt;p>这让我明白一个道理，一个事物的存在价值不在于他的受众有多少，而在于其的独特性，你认为呢？&lt;/p>
&lt;p>最后我也不能免俗，称赞一句，在facebook有一群牛b的人，做了一件牛b的事情，过程还是蛮刺激的。&lt;/p></description></item><item><title>2013年01月17日</title><link>https://ohcoder.com/post/2013/01/17/2013-01-17/</link><pubDate>Thu, 17 Jan 2013 00:00:00 +0000</pubDate><guid>https://ohcoder.com/post/2013/01/17/2013-01-17/</guid><description>&lt;img src="https://ohcoder.com/post/2013/01/17/2013-01-17/title.jpg" alt="Featured image of post 2013年01月17日" />&lt;p>自上一篇博客快有两个星期了，间隔有点长了，有时候想写点儿东西，但是总觉得积累的又不够，然后又想再积累一点再写吧，然后就这么拖呀拖呀，时间久了不知不觉就有点狗熊掰棒子的感觉，想了想，以后给自己定下一个规矩，向 &lt;a class="link" href="https://web.archive.org/web/20190413122503/http://tianchunbinghe.blog.163.com/" target="_blank" rel="noopener"
>伞哥&lt;/a>（注：原链接已失效，此处改为 WebArchive 站点上的链接）同学学习，每个礼拜写一篇，当作周记，技术文章另算。嗯，就这么定了，Y(^ _ ^)Y。&lt;/p>
&lt;p>这些天都在琢磨下一个app到底如何做，其中主要还是一些技术学习和摸索。另外也包括后面的版本管理和推广问题。&lt;/p>
&lt;p>此次我不准备用 Cocos2d 相关的游戏引擎，主要是觉得此次这个 app 主要涉及画图，和游戏开发还是有很大区别的，具体关注的点不一样。另外也想从零学习一下 OpenGL ES，因为觉得想用 Box2d 做点好玩的东西，基本画图还是避免不了的，索性还是自己动手吧，就算是重新造轮子啦，呵呵。其实也不算了，如果做的好，说不定可以用 OpenGL ES 封装出一套专门在 iOS 上开发图形的类库，以供娱乐呀。当然了也可以为以后在 iOS 上开发点其它 app 积累一些工具嘛，呵呵。&lt;/p>
&lt;p>关于 OpenGL ES 2 的学习资料，只找到了一些相对比较老的英文教程，而且主要都是 3D 方面的，而且都是一些非常入门的内容。此次我只想用 OpenGL ES 2 渲染 2D 图形，而且想学习一下可编程流水线进行图形渲染的技术，找来找去只看到，一本中文翻译的《OpenGL ES 2.0编程指南》算是比较新的了，其中主要以 OpenGL ES 的可编程渲染管道为主线，以 shader 文件的编写为基础，依据不同的渲染阶段分别进行了讲解，由于其译者的水平有限，前半部分看的还比较清晰，后边就越来越乱了，感觉可能还是要回头看下英文版吧。&lt;/p>
&lt;p>整体看下来，基本对最新标准的 OpenGL 渲染管线有了还算清晰的整体认识，也对顶点着色器和段着色器的编写有了基本的认识。老实说，图形学的坑还是很深的，简单画几条线还好，要想真正玩转不下点功夫和时间是不行的，而且对数学的要求又蛮高的，所以还是要做好“吃苦耐劳”的思想准备啊，:D。另外，在图形渲染这块，还有一点需要考虑，就是如何在 OpenGL ES 中做并发，WWDC 大概讲了一下关于这方面的问题，具体怎么做我想还是要仔细考虑一下。&lt;/p>
&lt;p>关于 Box2d 方面，看了一下 Chris 开发的 &lt;a class="link" href="https://www.iforce2d.net" target="_blank" rel="noopener"
>RUBE 编辑器&lt;/a>，觉得做的还是很牛 b 的，想以后用 Box2d 做点东西的同学可以了解一下。工具可以生成 cpp 文件和 json 格式的文件，既可以在 web 上用，又可以在本地开发使用。功能还是蛮强大的，还可以使用脚本编辑，不过感觉工具的快捷键还是蛮多的，一看就是 Linux 流派的人，呵呵。另外八卦一下，他人还是不错的，会讲日语，中文也能看懂一点点，呵呵，所以英文不好的同学也不用担心，有问题尽管问他好了，反正他中文也不好，哈哈。&lt;/p>
&lt;p>剩下数据库方面，想想就用原生的 Core Data 吧，耦合低一点，想换以后也可以再折腾嘛。&lt;/p>
&lt;p>其实，重点还是图形的渲染和 Box2d 方面。关于 OpenGL 我还买了两本书，一本称为蓝宝书的《&lt;a class="link" href="http://book.douban.com/subject/10774590/" target="_blank" rel="noopener"
>OpenGL超级宝典(第五版)&lt;/a>》，还有一本是《&lt;a class="link" href="http://book.douban.com/subject/10777165/" target="_blank" rel="noopener"
>交互式计算机图形学&lt;/a>》。蓝宝书大概翻了一遍，作为入门学习感觉不怎么样，作者自己封装了一套库，隐藏了很多OpenGL原生的API，虽然作者的好意是想避开一些“无用”的细节，但同时带来的负面影响也让初学者感到混乱。当然了，你可以去查看他封装的源代码，但这部分代码书中并没有讲解，需要自己去理解。第二本书还没怎么看，书也很新，也是基于 OpenGL 着色器讲解的，到时候看完了再说吧，哈哈。&lt;/p></description></item><item><title>扫盲Git</title><link>https://ohcoder.com/post/2013/01/05/learn-git/</link><pubDate>Sat, 05 Jan 2013 00:00:00 +0000</pubDate><guid>https://ohcoder.com/post/2013/01/05/learn-git/</guid><description>&lt;img src="https://ohcoder.com/post/2013/01/05/learn-git/title.jpg" alt="Featured image of post 扫盲Git" />&lt;p>扫盲了一下 Git，以后想用 Git 作为版本管理工具。&lt;/p>
&lt;p>前两天粗略看了两本关于 Git 的书，一本是《&lt;a class="link" href="http://git-scm.com/book/zh" target="_blank" rel="noopener"
>Pro Git&lt;/a>》(貌似需要翻墙)，另一本是《&lt;a class="link" href="http://book.douban.com/subject/6526452/" target="_blank" rel="noopener"
>Git权威指南&lt;/a>》。第一本书讲的比较基础，主要是对于 Git 的基本使用，其中包括基本的命令行操作，Git 服务器常见的搭建方式，以及使用 Git 的常见工作流。第二本讲的就比较深入了，较深入和详细的剖析了 Git。以前没怎么用过版本管理工具的同学可以先看下第一本，然后再看第二本，直接看第二本让人有点儿晕。&lt;/p>
&lt;p>大概翻完这两本书后，琢磨了一下，要是不想把自己的私人代码开源，又不想给 &lt;a class="link" href="https://github.com/" target="_blank" rel="noopener"
>Github&lt;/a> 送 Money，还想多学习一点技术，怎么办呢？想了想最划算的办法就是自己在 VPS 上用 Git 建立一个私人的代码库，以后想玩开源了再移到 Github 上。反正 VPS 闲着也是闲着嘛，要充分发挥其作用。&lt;/p>
&lt;p>在 VPS 上搭建简陋的 Git 代码库非常容易，只要安装上 Git 就满足最低要求了，PUSH/PULL 代码就直接用 SSH 连接就好了。而且 XCode 正好原生支持 Git，用 XCode 作为开发工具，上手就更容易了。粗看了下，基本上点点鼠标就 OK 了。工具嘛，最重要的还是使用。从最简单的点入手，边使用边学习，要比干巴巴的抱本书看感觉效果要好。再者 Git 的命令繁多，关键还得不断的使用才能熟练掌握。对于 Git 的命令行什么的这里就不啰嗦了，网上一搜一大堆。&lt;/p>
&lt;p>至于为什么非要折腾个版本管理，其实还有一个想法，就是想把自己平时玩的东西做一个规范的管理，以前自己瞎折腾的东西要么最后都删除了，要么就是遗忘了，最后也找不到了，干脆有的根本就想不起来是什么了，想想挺可惜的，不管怎么说，都是自己曾经的见证啊，跟写日记有相同的感觉。有时候看到几年前写的代码觉得也蛮好玩的，尤其是发现当时带有个人情绪写的注释。呵呵，现在看来会有不一样的感觉，也许当时并不这么看。&lt;/p>
&lt;p>另外，本博客的文章我也用 Git 备份到 VPS 上了，以后如果 Mac 系统出现什么问题，博客什么的也不会受到影响。呵呵，有点像是有了一个锤子，把什么都当成钉子的影子。无所谓啦，工具就是拿来用的，再者说谁规定 Git 只能用来管理代码呢？有了好的工具就应该多利用嘛，对硬盘上有价值的文件或代码我要统统管理一下，哈哈！&lt;/p></description></item><item><title>行骗记</title><link>https://ohcoder.com/post/2012/12/30/deception/</link><pubDate>Sun, 30 Dec 2012 00:00:00 +0000</pubDate><guid>https://ohcoder.com/post/2012/12/30/deception/</guid><description>&lt;img src="https://ohcoder.com/post/2012/12/30/deception/title.jpg" alt="Featured image of post 行骗记" />&lt;p>今天天色已晚，本来想洗洗睡了。关电脑前在 Google Plus 上看到一则临近年底公交车上 &lt;a class="link" href="https://plus.google.com/u/0/116618331988393616192/posts/ZoeaaTmyDLw" target="_blank" rel="noopener"
>行骗的消息&lt;/a>（注：原链接已失效），又勾起我想聊一下昨天(确切的说应该是前天)我遇到骗子的故事。&lt;/p>
&lt;p>故事发生在昨天下午 4 点多，咳咳……&lt;/p>
&lt;p>月底了，这个月也该交下个季度的房租了。昨天下午 4 点多，二房东(注：她自己也是租房的)用她的手机给我发了条飞信说该交下个季度的房租了，其中还包括水电费什么的。当时想吃完晚饭回来的路上顺便取回来，晚上给她(注: 一共有三户合租，其中有一位同学是二房东，平时大家相亲相爱谈不上，可以算是和睦的住在一起)。&lt;/p>
&lt;p>下午六点多吃完饭把钱取回来，大概不到七点的时候回的家，七点多的时候发现手机上有一条短信，短信的手机号是陌生人的，打开一看大概内容是这样写的，“你好，我是房东，这两天我出差，请把房租打到我老公农行帐号上 xxxxx(抱歉短信给删除了，本来没打算写博客记录的，只有回短信时候留下的手机号了)，请尽快把房租交了”。看完这条短信，说实在的我还真犹豫了 1 分钟，因为二房东确实有老公，而且确实也都住在一块儿，我也正好要交房租，还刚刚把钱取回来，这种巧合让我沉思了一分钟。一分钟之后转念一想可能是骗子。&lt;/p>
&lt;p>房租是三个月一交，这个月刚好要交了，而下午 4 点多二房东刚给我发的短信说要交房租，晚上 7 点多骗子就给我发短信说要交房租，按说这个骗子应该算是相当走狗屎运了，逻辑上来说太巧了。还好我把钱把的还是比较紧的，这年头儿谁不知道要钱的是孙子，欠钱的是爷呢(放心，二房东以为我只是个码农，不知道我还会写博客)。所以我就没有理这个骗子。&lt;/p>
&lt;p>晚上 8 点左右二房东夫妇归来，我当面把钱给了二房东，她热泪盈眶，眼里充满了感激之情，我欣慰的笑了，作为回应，我让她看了一条我的私人短信(就是这条骗子短信)，她淡定的告诉我，是个骗子。&lt;/p>
&lt;p>我若有所思的回到了我的房间，关上了门。沉思了一分钟，本着人人为我，我为人人的精神，为了让骗子同学晚上能够做个好梦，我决定给他回短信，短信言简意赅，“你好，钱已转到，注意查收！”。发完之后，淡定的看了一下手机上的时间，八点半。我慢慢的抬起头，看了看窗外的月光，心想，还来得及，他看了今晚一定可以做个好梦，我没有辜负他的期望。&lt;/p>
&lt;p>故事转眼到了第二天的下午，我正躺在床上思考人生(开个玩笑，其实我在阅读《&lt;a class="link" href="http://book.douban.com/subject/1903131/" target="_blank" rel="noopener"
>科学精神的形成&lt;/a>》这本书，书不错，跟哲学靠点边，有点批判科学的意思)。发现手机有新短信，打开一看，陌生人的号码，和昨天晚上的不是同一个号码，还好这条短信还保留着，内容是“那钱你还是直接打到这卡上，工行:&lt;!-- raw HTML omitted -->6212 2624 0200 3638 xxx&lt;!-- raw HTML omitted --> 彭xx，打好了告诉我！”(这里敏感信息就用 x 代替了，骗子也是人，是人都有隐私权嘛。如果你想赞助这位同学可以给我留言，我会把帐号全部信息告诉你)。退出短信，我看了下手机上的时间，下午 3 点 03 分。&lt;/p>
&lt;p>我看了看窗外，外面万里无云，阳光明媚，刮着 4～5 级的小北风，心存疑惑的想了想，这位同学难道真的去银行确认了吗？现在可都是下午时间了。&lt;/p>
&lt;p>为了不让这位同学失望，于下午 3 点 47 分，我又回了一个短信，依然言简意赅，“已转，请查收！！”&lt;/p>
&lt;p>一直到现在，第二天的凌晨一点半，没有见这位同学再回短信。窗外虽然看不到月光，不过我还是欣慰的看了看窗外，心想，这次他应该是收到钱了。&lt;/p>
&lt;p>剧终。&lt;/p>
&lt;p>言归正传，在此提醒各位有意或无意看到此博客的同学。年底了，大家要小心，各路骗子都出动了。要过年了，这是中国人的习俗，骗子也是人，所以他也要过年，出门在外要格外小心了。&lt;/p>
&lt;p>在此顺便展示一下这个两个手机号码，遇到的同学可以留个心，不过我想留了多半也是白留，骗子应该还没有笨到总是用同一个号码行骗的地步，不过本着行善的心态，还是留下吧:&lt;/p>
&lt;p>号码1: &lt;!-- raw HTML omitted -->15801503974&lt;!-- raw HTML omitted -->(北京移动)&lt;/p>
&lt;p>号码2: &lt;!-- raw HTML omitted -->15554255926&lt;!-- raw HTML omitted -->(山东青岛联通)&lt;/p>
&lt;p>最后，元旦将至，在此啰嗦一句，提前祝大家元旦快乐！:)&lt;/p></description></item><item><title>2012 年终总结</title><link>https://ohcoder.com/post/2012/12/23/annual-summary-2012/</link><pubDate>Sun, 23 Dec 2012 00:00:00 +0000</pubDate><guid>https://ohcoder.com/post/2012/12/23/annual-summary-2012/</guid><description>&lt;img src="https://ohcoder.com/post/2012/12/23/annual-summary-2012/title.jpg" alt="Featured image of post 2012 年终总结" />&lt;p>还有一个礼拜 2012 年就过去了。想了想，该写年终总结了。去年的年终总结是元旦过后的一个礼拜写的，今年就早一个礼拜吧，算是找补回来，:)。&lt;/p>
&lt;p>和 &lt;a class="link" href="http://ohcoder.diandian.com/post/2012-01-09/16713351" target="_blank" rel="noopener"
>去年的总结&lt;/a>（注：点点网链接已失效。这也是自己做站点的一个好处，数据不容易丢） 一样，大体先从时间上做一个流水账。&lt;/p>
&lt;ul>
&lt;li>
&lt;p>3 月份左右开始正式学习 iOS 开发。从使用 Objective C 输出 &amp;ldquo;Hello,world&amp;rdquo; 开始。使用 Objective C 实现了 24 种设计模式，算是对基础知识的一个学习吧。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>4 月份开始学习 Box2D 物理引擎，翻译了 &lt;a class="link" href="https://web.archive.org/web/20190510231036/http://ohcoder.com/blog/categories/box2d-manual/" target="_blank" rel="noopener"
>Box2D 2.2.0手册&lt;/a>（注：原链接已失效，此处为 WebArchive 上的链接），在此应该感谢一下 &lt;a class="link" href="http://swotong.com/" target="_blank" rel="noopener"
>David&lt;/a>（注：链接已失效） 同学，我的 Box2D 入门是从 &lt;a class="link" href="http://swotong.com/intro-to-box2dweb-box2dweb%E7%AE%80%E4%BB%8B/" target="_blank" rel="noopener"
>他的 Box2dweb 教程&lt;/a>（注：链接已失效） 开始的。此期间还对 SQLite 做了了解。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>5 月份心态有些乱，对于 Objective C 语言相关的概念做了学习，回想一下这个月的效率很低，也许是因为对于突然变成自由开发者的这种状态不习惯吧，心理压力突然变的很大，心态也不是很稳定，经常会幻想一些顾虑，在这里要感谢 &lt;a class="link" href="https://plus.google.com/u/0/101276516947217339744/posts" target="_blank" rel="noopener"
>Jay&lt;/a>（注：链接已失效）同学。那个时候每当心里出现焦躁的时候经常会麻烦他，:)。哦，对了，这个月开始开发我的第一个项目 &lt;a class="link" href="https://web.archive.org/web/20190414184223/http://ohcoder.com/blog/2012/12/06/oh-moving/" target="_blank" rel="noopener"
>Oh Moving&lt;/a>（注：原链接已失效， 此处为 WebArchive 上的链接）。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>6、7 月份一边开发我的第一个项目一边翻译 &lt;a class="link" href="http://www.iforce2d.net/b2dtut/introduction" target="_blank" rel="noopener"
>Box2D C++ 教程&lt;/a>（注：链接随时会失效），期间还学习了 Cocos 2d 游戏引擎。7 月底项目上架。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>8 月份大概有半个多月的时间做了一个飞机雷达方面的仿真项目。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>9、10 月份一边翻译 Box2D 的 C++ 教程，一边对移动互联网相关方面进行学习。因为移动和互联网是不可分割的嘛，所以对于 Web 的学习也是有必要的。期间学习体验了一下 Google 针对前端开发的新语言 Dart。另外，还对其它方面做了学习，比如说对经济、市场营销方面的学习，还有对中国宏观经济的了解。呵呵，听起来很大，其实就是学习吧，产生了一些自己的想法，这些想法也许不一定对，但是我觉得有想法是产生正确想法的第一步，:)。期间主要是看了些相关书籍和相关资料，对于技术之外知识的学习是上班的时候很少考虑的问题，对于我来说算是全新的内容。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>11、12 月份对于很多之前的疑问，根据自己的判断得出了一些自认为还算符合逻辑的想法（也许不正确，但谁又能保证自己的想法一定是正确的呢？:P），其中主要还是对于iOS方面未来趋势的自我判断吧。期间学习了 Go 语言，写了几个小例子，我喜欢 Go 语言的简单和强大，也想长期关注这门语言，相信这门语言会在未来的互联网方面有所建树，同时也开始着手我的第二个 app 的开发。另外，这段时间还帮助 Jay 同学开发的阅读类应用 &lt;a class="link" href="http://zinerapp.com/" target="_blank" rel="noopener"
>ziner&lt;/a>（注：原链接已失效） 做了一些前期测试的工作，给出了一些无关痛痒的建议，:P。哦对了，前些天在 &lt;a class="link" href="http://www.linode.com/?r=8b6c054524f1aec70d674c6bca4bc6c198851e69" target="_blank" rel="noopener"
>Linode&lt;/a> 上租了VPS，把写了一年多的博客也移到了上面（正如大家现在看到的）。还有一点值得一提，通过平时写这个博客，也让使用&lt;!-- raw HTML omitted -->vim&lt;!-- raw HTML omitted -->编辑器成为了常态，以此熟悉这个编辑器。我这人比较懒，有时候需要通过耍一些小聪明强迫自己才行，:P。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>大概的时间分配我想就是这样。这一年里，除了在技术方面的转型和摸索以外，我想最大的收获还是思想和认识的转变，我认为这个对我的影响更为重要。&lt;/p>
&lt;ol>
&lt;li>认同 Unix/Linux 文化，转变技术观念。&lt;/li>
&lt;li>自从今年把翻墙当作常态以后，对社会有了新的认识（这其中包括普通老百姓以及政府，你懂的）。&lt;/li>
&lt;li>对于移民有了更客观和理性的认识（别误会，我不是那种要么非要移民，要么非要“爱国”的那种人。世界上哪个国家都有脏的一面，只不过在有的国家你可以选择远离脏的地方，而在有的国家，除了不得不忍受脏的环境以外，你还要必须学会在脏的环境中生存。当然，即便如此我也会积极的尽自己的微薄之力尽可能的争取让身边的人生活的开心，也算是“自扫门前雪”吧）。&lt;/li>
&lt;li>通过在 Twitter、Google Plus 以及新浪微博上关注互联网圈子里的牛人，对互联网的前辈们有了更多的了解，同时也学到了很多知识，长了很多见识。通过自己做第一个项目也有了一些切身的体会，我想更深的感受应该是，对于移动互联网的理解更理性和深刻了一步吧。&lt;/li>
&lt;li>由于翻译 &lt;a class="link" href="https://www.iforce2d.net/b2dtut/" target="_blank" rel="noopener"
>Box2D C++ 教程&lt;/a>（注：链接随时会失效），有幸结识原作者 &lt;a class="link" href="https://twitter.com/iforce2d" target="_blank" rel="noopener"
>Chris&lt;/a>（能上 Twitter 的同学可以关注）。自此也算是正式开始和外国朋友打交道，后来又有和 Linode 同学（技术支持）的沟通，以及域名代理 &lt;a class="link" href="http://www.name.com/" target="_blank" rel="noopener"
>name.com&lt;/a> 的同学交流，后来又加了开发 &lt;a class="link" href="http://lib.ivank.net/" target="_blank" rel="noopener"
>IvanK Lib&lt;/a> 的 Ivan 同学的gtalk，有过简短的交流。呵呵，我以前很土鳖吧。好吧，顺便在此彻底自曝一下，其实翻译 &lt;a class="link" href="https://web.archive.org/web/20190510231036/http://ohcoder.com/blog/categories/box2d-manual/" target="_blank" rel="noopener"
>Box2D用户手册&lt;/a>（注：原链接已失效，此处为 WebArchive 上的链接） 是我第一次正儿八经的翻译技术资料，后来又厚脸皮的翻译了 Box2D C++ 教程（抱歉还没翻译完，我会在元旦前后尽可能翻译完所有教程），期间有过网上朋友的批评和指正，还有鼓励。我想凡事都有一个开头，迈出第一步很重要，:)。&lt;/li>
&lt;li>认识到目前自己的英语是多么的烂，今年也花了一些时间学习英语，有了一点点的进步，不过还差很多，再接再厉吧。另外，真正认识到多掌握一门外语有多么的重要。由于比较喜欢日本的动漫歌曲，因为发现很多日本的动漫歌曲的歌词写的普遍很不错，但是又不懂日语，上个月一冲动买来了初级《&lt;a class="link" href="http://book.douban.com/subject/1122851/" target="_blank" rel="noopener"
>标准日本语&lt;/a>》，可惜的是发现我的下一个 iOS 项目涉及的知识要学的东西太多了，所以降低了学习日语的优先级，只学习了平假名和片假名及其相关基本发音，算是过一下隐吧，:(。以后稍微稳定一些了再继续吧，我还是想学习一下日语的，除了因为想看懂动漫歌词以外，还有一点是切身体会到了懂得一门语言的重要性！&lt;/li>
&lt;/ol>
&lt;p>最后，发现要学的东西好多啊，好多都不会，有的时候都发愁啊。说实话，有时候想想这么多东西要学，不由的产生一种焦虑的感觉，总担心自己被淘汰。哎，自己也知道，没什么可商量的，饭也要一口一口的吃，贵在坚持。&lt;/p>
&lt;p>2013 年会怎么样我不知道，也无法预测，除了该学的知识需要尽快迎头赶上以外，其它会发生什么事情，已经超出了我所能控制的范围，不过好在大方向基本有了，目前能做的就是先在自己能控制的范围内迎头赶上吧，希望自己不要被淘汰。&lt;/p>
&lt;p>加油！同学们！&lt;/p></description></item><item><title>学习与上学</title><link>https://ohcoder.com/post/2012/12/14/learning-and-school/</link><pubDate>Fri, 14 Dec 2012 00:00:00 +0000</pubDate><guid>https://ohcoder.com/post/2012/12/14/learning-and-school/</guid><description>&lt;img src="https://ohcoder.com/post/2012/12/14/learning-and-school/title.jpg" alt="Featured image of post 学习与上学" />&lt;p>今天在新浪微博上看到一条关于考研的 &lt;a class="link" href="http://weibo.com/1813080181/z9HJ2hTOy" target="_blank" rel="noopener"
>微博&lt;/a>（注：链接已失效。当年的薛蛮子可以了解一下），不免想起自己当初为什么选择放弃考研。&lt;/p>
&lt;p>其实在我刚毕业的那两年还是有考研的想法的，骨子里一直认为学习和上学是划等号的。在我工作了两年多以后，这种想法不是很强烈了，不过潜意识里还是认为上学才是真正的学习，工作的这两年期间在软件方面也在不断的尝试对哪个方向更有兴趣，其实这个问题一直都没有想太明白，直到今年才有了一个比较靠谱的想法，:)。&lt;/p>
&lt;p>恰巧那段时间有两个不错的朋友来北京读研，平时也会去和他们聊一些自己的想法。其实我读研的原因很简单，希望到一个安静的没人打扰的地方对自己感兴趣的方向进行深入研究学习，为以后打基础，反正我也不想当科研人员，或者留在大学以后当教师，觉得计算机属于工科类，进入社会可能能发挥更大的价值吧。不过，当我看到他们的读研状态之后我有点犹豫了（别误会，他们的学校还是不错的，其中有一位朋友的学校还是挺牛b的），不过我还是觉得可能是个别现象，当我把自己想法跟其中一位朋友说了之后，他跟我说现在国内基本不可能有这样的地方。&lt;/p>
&lt;p>那段时间无聊的时候我也会在网上搜索一些考生对学校的评价，想看看哪个学校的环境能和我的想法更拟合。后来无意间发现云风写过一篇关于读研的&lt;a class="link" href="http://blog.codingnow.com/2006/01/oeouanoaoeea.html" target="_blank" rel="noopener"
>文章&lt;/a>，看完之后读研的念头基本上我就放弃了，后来某一天我突然转过这个弯儿了（我悟性一直很差，见谅！:D），想学习为什么非要读研呢？&lt;/p>
&lt;p>后来不断反思的时候才意识到，其实当初非常想考研还有一个不正常的心态在起作用，那就是虚荣心，而不只是单纯的为了求学。&lt;/p>
&lt;p>后来我才渐渐意识到身边的很多同学多多少少都有这个心态，只不过有的同学心知肚明但不敢面对，而有的同学一直都没有意识到，一直到今天。当然了还有的同学虽然嘴上说是为了找份好工作，其实是不敢面对现实，不敢迈入社会，心里上放不下这份学校的“荣誉”。&lt;/p>
&lt;p>其实有些事情躲是躲不过的，如果你一直不敢转过身去面对，你就永远没有战胜它的机会。或许你会被这个阴影困扰很久，而且时间越久，你战胜它的成本就越高，也许有一天你会彻底妥协，从学生时代的充满希望，被它变成不得不充满“希望”，这个时候剩下的，我想更多的会是无奈。&lt;/p>
&lt;p>现在我自己对于这个问题的理解，应该是更理性了吧。而且对于当初放弃考研的这个决定至少到目前还没有感到后悔。随着时间的推移，我还逐渐意识到，学习真的是一辈子的事情，从学校学到的应该是找到适合自己学习的学习方法，而不仅仅是具体的知识。学校里的很多知识在社会中很快就有可能会被淘汰，我想很多朋友都明白这个道理，但是当初能意识到这一点的人，其实并不多，包括我自己也没有意识到。&lt;/p>
&lt;p>说了这么多，主要还是想给自己做一些总结吧，起因可能还是那条微博。我觉得对自己多做总结是一个挺好的习惯，有很多事情当时其实是无意识就做了，过后想一想当初为什么这么做，为什么不那么做，有的时候会有意想不到的经验被发掘出来。话说回来，其实我挺理解那些学生的，但是又觉得挺遗憾的。呵呵，说了这么多，还是先管好自己再说吧。&lt;/p>
&lt;p>另外，近段时间我发现一个很有趣的现象。我发现很多人在讨论两个或多个事物的时候思维总喜欢一维化，也就是说总喜欢给排个队，一定要分出个1、2、3来，而且很多人的这种思维方式不约而同的相似。完全没有逻辑的两个事物也是如此，比如说本来两种动物，A动物吃肉，B动物吃草，结论一定要是A吃肉比B吃草好，或者反过来，反正结果总是要比出个1、2、3来才行，要不总是心有不甘。当然了，争论一定是要有多个人才能形成，所以带有这种思维方式的人占大多数，而且不分地域，网上争论多半不是一个地方的嘛，我觉得这个现象蛮好玩的。&lt;/p>
&lt;p>后来无聊的时候想了想，可能和我们的多年的教育有很大关系，上学的时候不是排名就是排名，凡事都要排出个1、2、3来，你想啊，除了学习排名以外，开运动会排名，大扫除排名，捐个款也要排名，各自的爹也要给排名，包括后来的升学，也要排名，进入社会不免就会产生一种思维惯性，就是凡事都要排个名，包括收入，职位高低，学历高低，甚至好玩的是朋友之间各自交往的朋友圈子也要拿过来排个名，比如你认识A，我认识B，我可能会潜意识里夸B多么多么牛b，以示B比A其实牛b。呵呵，是不是觉得蛮好玩的。不知道你身边有没有这样的现象，反正我是见过的，网上或现实生活都有见过，呵呵。&lt;/p>
&lt;p>哦，还有最后一件事，这个礼拜本来想买一个靠垫儿来着，后来在淘宝上发现大头狗公仔不错，结果就买了一只，我还给他起了个名儿，叫“木桶”，形象吧，哈哈～！&lt;/p>
&lt;p>&lt;img src="https://ohcoder.com/post/2012/12/14/learning-and-school/bigHead.jpg"
width="300"
height="300"
srcset="https://ohcoder.com/post/2012/12/14/learning-and-school/bigHead_hu5eeca047c1c7a9fe35474c43272c4d82_32216_480x0_resize_q75_box.jpg 480w, https://ohcoder.com/post/2012/12/14/learning-and-school/bigHead_hu5eeca047c1c7a9fe35474c43272c4d82_32216_1024x0_resize_q75_box.jpg 1024w"
loading="lazy"
alt="BigHead"
class="gallery-image"
data-flex-grow="100"
data-flex-basis="240px"
>&lt;/p></description></item><item><title>锄头</title><link>https://ohcoder.com/post/2012/12/07/hoe/</link><pubDate>Fri, 07 Dec 2012 00:00:00 +0000</pubDate><guid>https://ohcoder.com/post/2012/12/07/hoe/</guid><description>&lt;img src="https://ohcoder.com/post/2012/12/07/hoe/title.jpg" alt="Featured image of post 锄头" />&lt;p>近来良心发现，深刻的认识到了自己的差距，自己底子的薄弱，以前总是停留在想，为了不再祸害中国软件业，前两天开始补习系统相关基础知识，开始看《&lt;a class="link" href="http://book.douban.com/subject/5333562/" target="_blank" rel="noopener"
>深入理解计算机系统&lt;/a>》这本书。&lt;/p>
&lt;p>身为一名码农，如果对自己用的“锄头”都不了解，想来想去总觉得是一件不太靠谱的事情。要想改变宇宙，也得先从改造自己下手！以前总是找各种理由躲避，其中有一条理由可能印象最深刻，总是觉得“根本用不到嘛”，因为不能有立竿见影的效果，所以总是推三阻四。但是最不可饶恕的是，每每跟人吹牛b的时候，总是说：“某某某，你应该好好学习一下操作系统，很重要哦！”哎，这两天自己想了想，自己都不看，还有脸让别人看，怎么这么无耻啊！自己应该对自己千刀万剐！（说说而已，说说而已！:P）&lt;/p>
&lt;p>为了悔过自新，重新做码农。在此先承认自己之前犯的错误。俗话说，认识错误是改正错误的第一步嘛。所以这两天下决心怎么说也要好好补习一下相关知识。&lt;/p>
&lt;p>经过这几天的学习，看到了第五章－“优化程序性能”。这一帆可谓不风顺啊。&lt;/p>
&lt;p>第一章还好，是“计算机系统漫游”，总体来说没什么难度，大而全的讲了一堆，看不懂也没关系，反正后边还会展开来讲嘛。&lt;/p>
&lt;p>第二章是“信息的表示和处理”，前面讲编码表示和进制之间的变换，接下来讲整数的二进制表示，以及整数的四则运算是如何进行的，再接下来是浮点数的表示以及运算。哦，还有一点比较重要，C语言中的对于数值类型的强制转换是如何进行的。这些基础知识看似不重要，其实都很重要，很多系统级别的漏洞都和数值溢出有关，属于基本功。&lt;/p>
&lt;p>第三章是“程序的机器级表示”，说白了就是汇编基础以及汇编与C语言之间是如何互相映射的，看这部分的时候一开始还好，后边的指令跳转有点头晕，也有点儿乱，不过还好吧，这一章的整体思路就是教你用汇编映射C语言。当然了，如果你能把汇编眼瞅着就能还原成C语言，反之也行，那么这一章你就算是基本掌握了。&lt;/p>
&lt;p>第四章是“处理器体系结构”，这一章对于程序员来说应该是最底层了，主要解释了每条汇编指令在CPU中是如何运行的，通过构造最简单的Y86，带领大家实现一个处理器，以此来了解处理器的基本逻辑。说实话，这一章后半部分看的我是云里雾里，找不着北啊，明显功力不够哇。可能问题出在某一个知识点没有掌握吧，导致跟不上作者的逻辑，迷路了。迷路的孩子伤不起啊～&lt;/p>
&lt;p>第五章是“优化程序性能”，这一章还没看完，只是起了个头，不过我感觉这章的思路是以前几章为基础，以C语言为例，来说明程序应该怎样写效率比较高。其实我自己感觉如果前两章掌握的比较好的话，既了解CPU的基本构造，又能很快的把C语言还原成汇编的话，这章基本就是经验之谈。当然了，这章我自己还没看完，在此只是胡喷。&lt;/p>
&lt;p>看过四章多一点之后，感慨不愧为经典啊，跟人吹牛b的时候总算是没有害了人家。书中很多细节还是需要不断揣摩的，现在很多知识点还只是个框架概念，从真正理解到灵活自如的运用还是需要时间不断消化啊。不过好在自己亡羊补牢，总算是迈出了重要的一步了，这本书对于我这种脑子不好使的同学来说，少于五遍，我想我很难全面理解书中的知识点，掌握的遍数另算。呵呵，没办法，脑子不好使，身体就得勤快点儿，这话是我第一个老板说我的，呵呵，比较适合我，我很受用 :)。&lt;/p>
&lt;p>说两句题外话，这两天有时候心神不定的，有点遥想当年的韵味，时不时会想起中学。有时候我很自恋的在想，是不是有哪位中学女同学想我了，给我发脑电波呢？心灵感应嘛。哎，历史是改变不了的，如果真有哪位女同学怀念我了，我会语重心长的对她说：“同学，好好过日子。地球很危险，还是回火星去吧”。&lt;/p></description></item><item><title>Hello Word Again</title><link>https://ohcoder.com/post/2012/12/03/hello-word-again/</link><pubDate>Mon, 03 Dec 2012 00:00:00 +0000</pubDate><guid>https://ohcoder.com/post/2012/12/03/hello-word-again/</guid><description>&lt;img src="https://ohcoder.com/post/2012/12/03/hello-word-again/title.jpg" alt="Featured image of post Hello Word Again" />&lt;p>说来惭愧，上个礼拜刚刚用 Wordpress 建立的新博客，还没新鲜几天就给让我弄挂了，身为一个码农，在这里由衷的感到脸红。经过一个礼拜的生死“博”斗，博客在这里又重生了！这是一个值得庆贺的日子……省略 500 个字。&lt;/p>
&lt;p>废话也不多说了，纯爷们是永远都不会被他人所击倒的，除非他自己选择倒下。所以我选择重新竖起门面，扛起大旗，继续战斗在这片神奇的土地上。&lt;/p>
&lt;p>说实话，回头冷静想了想，感觉 Wordpress 表面看起来好像很简单，其实真的好难啊，遇到问题了真的都不知道从何处下手，不过说实在的，我在Web这块儿也确实是个白痴，我得承认。不过奇怪的是，即便这样，这次通过 Octopress 重新搭建博客，遇到问题却没有产生像 Wordpress 那样无从下手的感觉，这真是个奇怪的感觉。可能主要原因是因为 Wordpress 太臃肿了，牵连的东西太多了，像我这种小白用户就很难深入使用，相反 Octopress 就很简单，尽管也是搭建在自己的 VPS 上，Octopress 的搭建就简单的不能再简单了。具体怎么个简单，有兴趣的同学可以自己去试试看，比较一下就知道了，在这儿就不啰嗦了。&lt;/p>
&lt;p>通过这几天折腾这个博客，对于文本这个东西有点儿暧昧了，以前总是理所当然的认为界面才是简单直观的，点点鼠标就OK了，其他不用操心，但是这几天通过折腾这个博客，感悟到一点不一样的想法。也越来越清晰的感到文本的好处，也许之前受 Windows 的毒害太深了，把本来简单的东西想象的很复杂，把披着光鲜外衣，内部构造复杂的事物却理所当然的认为是简单的。好吧，说到这又有想 Windows 的冲动。算了，还是忍忍吧，要不然说不定会有同学出来说“忘本”呢。&lt;/p>
&lt;p>不管怎么说吧，博客这档子事情总算是安定下来了，打死也不想再折腾了（只要不打死还可能会折腾）。接下来，就要按部就班的回归正轨了。文章该翻译的翻译，生活方面也该多写点儿文字，还是那句话，一段时间以后，总有一种被时间出卖的感觉，不知道自己整天都在瞎忙活啥，记录一点儿，多少能产生点存在感，你说是吧。&lt;/p>
&lt;p>上次开篇题目为 &amp;ldquo;Hello World&amp;rdquo;，结果没过三天，博客挂了&amp;hellip;&amp;hellip;俗话说从哪里跌倒的就从哪里爬起来，所以这篇博客题为 &amp;ldquo;Hello World Again&amp;rdquo;，如果三天以后博客又让我给弄挂了，我会再建起来，然后开篇题目为 &amp;ldquo;Hello World Again And Again&amp;rdquo;，空口无凭，在这里先立一个字据，向马克斯保证！&lt;/p>
&lt;p>不小心第一次看我的博客的同学我得解释一下，这篇文章之前的那些文章是我从去年后半年开始写的，当初不是独立博客，这里只是把部分时效性不强的文字搬了过来，有兴趣的同学，可以点击 &lt;a class="link" href="http://ohcoder.diandian.com/" target="_blank" rel="noopener"
>这里&lt;/a> (注：当年的 点点网 早已消失，有兴趣可以搜一下 &lt;a class="link" href="https://zh.wikipedia.org/zh-hans/%e8%ae%b8%e6%9c%9d%e5%86%9b" target="_blank" rel="noopener"
>许朝军&lt;/a> 这个人。此处链接没改，算是留个纪念吧）。&lt;/p>
&lt;p>最后，为了有一个好的开端，这里露个脸，显摆一张酷照，哈哈！&lt;/p>
&lt;p>&lt;img src="https://ohcoder.com/post/2012/12/03/hello-word-again/cool.jpg"
width="960"
height="720"
srcset="https://ohcoder.com/post/2012/12/03/hello-word-again/cool_hu95f1f7bccce17b31f62e14ec4e1223fe_233244_480x0_resize_q75_box.jpg 480w, https://ohcoder.com/post/2012/12/03/hello-word-again/cool_hu95f1f7bccce17b31f62e14ec4e1223fe_233244_1024x0_resize_q75_box.jpg 1024w"
loading="lazy"
alt="Cool"
class="gallery-image"
data-flex-grow="133"
data-flex-basis="320px"
>&lt;/p></description></item></channel></rss>